{
  "docusaurus-plugin-content-docs": {
    "default": {
      "loadedVersions": [
        {
          "versionName": "current",
          "label": "v5",
          "banner": null,
          "badge": true,
          "className": "docs-version-current",
          "path": "/docs/",
          "tagsPath": "/docs/tags",
          "isLast": true,
          "sidebarFilePath": "/Users/n.borisov/subsquid-docs/sidebars.js",
          "contentPath": "/Users/n.borisov/subsquid-docs/docs",
          "contentPathLocalized": "/Users/n.borisov/subsquid-docs/i18n/en/docusaurus-plugin-content-docs/current",
          "docs": [
            {
              "unversionedId": "faq/bug-reporting-guidelines",
              "id": "faq/bug-reporting-guidelines",
              "title": "Bug reporting guidelines",
              "description": "Overview",
              "source": "@site/docs/faq/bug-reporting-guidelines.md",
              "sourceDirName": "faq",
              "slug": "/faq/bug-reporting-guidelines",
              "permalink": "/docs/faq/bug-reporting-guidelines",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Support",
                "permalink": "/docs/faq/"
              },
              "next": {
                "title": "How do I decode the event data? And how to deal with runtime upgrades?",
                "permalink": "/docs/faq/how-do-i-decode-the-event-data-and-how-to-deal-with-runtime-upgrades"
              }
            },
            {
              "unversionedId": "faq/how-do-i-decode-the-event-data-and-how-to-deal-with-runtime-upgrades",
              "id": "faq/how-do-i-decode-the-event-data-and-how-to-deal-with-runtime-upgrades",
              "title": "How do I decode the event data? And how to deal with runtime upgrades?",
              "description": "See the dedicated tutorial on generating TypeScript definitions for blockchain events.",
              "source": "@site/docs/faq/how-do-i-decode-the-event-data-and-how-to-deal-with-runtime-upgrades.md",
              "sourceDirName": "faq",
              "slug": "/faq/how-do-i-decode-the-event-data-and-how-to-deal-with-runtime-upgrades",
              "permalink": "/docs/faq/how-do-i-decode-the-event-data-and-how-to-deal-with-runtime-upgrades",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Bug reporting guidelines",
                "permalink": "/docs/faq/bug-reporting-guidelines"
              },
              "next": {
                "title": "How do I deploy my API to the Subsquid Hosted service?",
                "permalink": "/docs/faq/how-do-i-deploy-my-api-to-the-subsquid-hosted-service"
              }
            },
            {
              "unversionedId": "faq/how-do-i-deploy-my-api-to-the-subsquid-hosted-service",
              "id": "faq/how-do-i-deploy-my-api-to-the-subsquid-hosted-service",
              "title": "How do I deploy my API to the Subsquid Hosted service?",
              "description": "Follow the dedicated Tutorial",
              "source": "@site/docs/faq/how-do-i-deploy-my-api-to-the-subsquid-hosted-service.md",
              "sourceDirName": "faq",
              "slug": "/faq/how-do-i-deploy-my-api-to-the-subsquid-hosted-service",
              "permalink": "/docs/faq/how-do-i-deploy-my-api-to-the-subsquid-hosted-service",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "How do I decode the event data? And how to deal with runtime upgrades?",
                "permalink": "/docs/faq/how-do-i-decode-the-event-data-and-how-to-deal-with-runtime-upgrades"
              },
              "next": {
                "title": "How do I know which events and extrinsics I need for the handlers?",
                "permalink": "/docs/faq/how-do-i-know-which-events-and-extrinsics-i-need-for-the-handlers"
              }
            },
            {
              "unversionedId": "faq/how-do-i-know-which-events-and-extrinsics-i-need-for-the-handlers",
              "id": "faq/how-do-i-know-which-events-and-extrinsics-i-need-for-the-handlers",
              "title": "How do I know which events and extrinsics I need for the handlers?",
              "description": "This part depends on the runtime business logic of the chain. The primary and the most reliable source of information is thus the Rust sources for the pallets used by the chain.",
              "source": "@site/docs/faq/how-do-i-know-which-events-and-extrinsics-i-need-for-the-handlers.md",
              "sourceDirName": "faq",
              "slug": "/faq/how-do-i-know-which-events-and-extrinsics-i-need-for-the-handlers",
              "permalink": "/docs/faq/how-do-i-know-which-events-and-extrinsics-i-need-for-the-handlers",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "How do I deploy my API to the Subsquid Hosted service?",
                "permalink": "/docs/faq/how-do-i-deploy-my-api-to-the-subsquid-hosted-service"
              },
              "next": {
                "title": "How do I run and test the GraphQL API?",
                "permalink": "/docs/faq/how-do-i-run-and-test-the-graphql-api"
              }
            },
            {
              "unversionedId": "faq/how-do-i-run-and-test-the-graphql-api",
              "id": "faq/how-do-i-run-and-test-the-graphql-api",
              "title": "How do I run and test the GraphQL API?",
              "description": "Once the migrations are applied, simply run",
              "source": "@site/docs/faq/how-do-i-run-and-test-the-graphql-api.md",
              "sourceDirName": "faq",
              "slug": "/faq/how-do-i-run-and-test-the-graphql-api",
              "permalink": "/docs/faq/how-do-i-run-and-test-the-graphql-api",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "How do I know which events and extrinsics I need for the handlers?",
                "permalink": "/docs/faq/how-do-i-know-which-events-and-extrinsics-i-need-for-the-handlers"
              },
              "next": {
                "title": "How do I start the processor?",
                "permalink": "/docs/faq/how-do-i-start-the-processor"
              }
            },
            {
              "unversionedId": "faq/how-do-i-start-the-processor",
              "id": "faq/how-do-i-start-the-processor",
              "title": "How do I start the processor?",
              "description": "First, make sure you have compiled your project with",
              "source": "@site/docs/faq/how-do-i-start-the-processor.md",
              "sourceDirName": "faq",
              "slug": "/faq/how-do-i-start-the-processor",
              "permalink": "/docs/faq/how-do-i-start-the-processor",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "How do I run and test the GraphQL API?",
                "permalink": "/docs/faq/how-do-i-run-and-test-the-graphql-api"
              },
              "next": {
                "title": "How do I update my schema?",
                "permalink": "/docs/faq/how-do-i-update-my-schema"
              }
            },
            {
              "unversionedId": "faq/how-do-i-update-my-schema",
              "id": "faq/how-do-i-update-my-schema",
              "title": "How do I update my schema?",
              "description": "Destructive option",
              "source": "@site/docs/faq/how-do-i-update-my-schema.md",
              "sourceDirName": "faq",
              "slug": "/faq/how-do-i-update-my-schema",
              "permalink": "/docs/faq/how-do-i-update-my-schema",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "How do I start the processor?",
                "permalink": "/docs/faq/how-do-i-start-the-processor"
              },
              "next": {
                "title": "How do I write the schema?",
                "permalink": "/docs/faq/how-do-i-write-the-schema"
              }
            },
            {
              "unversionedId": "faq/how-do-i-write-the-schema",
              "id": "faq/how-do-i-write-the-schema",
              "title": "How do I write the schema?",
              "description": "The schema file defines the shape of the final GraphQL API and has very few limitations. Designing the schema file is very similar to the design of the database schema. As a rule of thumb, the schema should represent high level domain specific entities and relations between them, to make data fetching and filtering easy for the API consumers.",
              "source": "@site/docs/faq/how-do-i-write-the-schema.md",
              "sourceDirName": "faq",
              "slug": "/faq/how-do-i-write-the-schema",
              "permalink": "/docs/faq/how-do-i-write-the-schema",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "How do I update my schema?",
                "permalink": "/docs/faq/how-do-i-update-my-schema"
              },
              "next": {
                "title": "How to run a processor against a different chain?",
                "permalink": "/docs/faq/how-to-run-a-processor-against-a-different-chain"
              }
            },
            {
              "unversionedId": "faq/how-to-run-a-processor-against-a-different-chain",
              "id": "faq/how-to-run-a-processor-against-a-different-chain",
              "title": "How to run a processor against a different chain?",
              "description": "You will need to have WebSocket endpoint to connect to the chain node and a Squid Archive. For a registry of Squid Archives, check this community-owned Archive Registry",
              "source": "@site/docs/faq/how-to-run-a-processor-against-a-different-chain.md",
              "sourceDirName": "faq",
              "slug": "/faq/how-to-run-a-processor-against-a-different-chain",
              "permalink": "/docs/faq/how-to-run-a-processor-against-a-different-chain",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "How do I write the schema?",
                "permalink": "/docs/faq/how-do-i-write-the-schema"
              },
              "next": {
                "title": "Where do I get a type bundle for my chain?",
                "permalink": "/docs/faq/where-do-i-get-a-type-bundle-for-my-chain"
              }
            },
            {
              "unversionedId": "faq/README",
              "id": "faq/README",
              "title": "Support",
              "description": "Find answers to your questions",
              "source": "@site/docs/faq/README.md",
              "sourceDirName": "faq",
              "slug": "/faq/",
              "permalink": "/docs/faq/",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "next": {
                "title": "Bug reporting guidelines",
                "permalink": "/docs/faq/bug-reporting-guidelines"
              }
            },
            {
              "unversionedId": "faq/where-do-i-get-a-type-bundle-for-my-chain",
              "id": "faq/where-do-i-get-a-type-bundle-for-my-chain",
              "title": "Where do I get a type bundle for my chain?",
              "description": "Most chains publish their type bundles as an npm package (for example: Edgeware). One of the best places to check for the latest version is the polkadot-js/app and polkadot-js/api repositories. It's worth noting, however, that a types bundle is only needed for pre-Metadata v14 blocks, so for recently deployed chains it may be not needed.",
              "source": "@site/docs/faq/where-do-i-get-a-type-bundle-for-my-chain.md",
              "sourceDirName": "faq",
              "slug": "/faq/where-do-i-get-a-type-bundle-for-my-chain",
              "permalink": "/docs/faq/where-do-i-get-a-type-bundle-for-my-chain",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "How to run a processor against a different chain?",
                "permalink": "/docs/faq/how-to-run-a-processor-against-a-different-chain"
              },
              "next": {
                "title": "Overview",
                "permalink": "/docs/"
              }
            },
            {
              "unversionedId": "key-concepts/architecture",
              "id": "key-concepts/architecture",
              "title": "Architecture",
              "description": "Explaining the main components of a Subsquid Query Node",
              "source": "@site/docs/key-concepts/architecture.md",
              "sourceDirName": "key-concepts",
              "slug": "/key-concepts/architecture",
              "permalink": "/docs/key-concepts/architecture",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "Explaining the main components of a Subsquid Query Node"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Key Concepts",
                "permalink": "/docs/key-concepts/"
              },
              "next": {
                "title": "Processor",
                "permalink": "/docs/key-concepts/processor"
              }
            },
            {
              "unversionedId": "key-concepts/processor",
              "id": "key-concepts/processor",
              "title": "Processor",
              "description": "The SubstrateProcessor is the main actor in transforming and loading on-chain data, according to pre-defined database model",
              "source": "@site/docs/key-concepts/processor.md",
              "sourceDirName": "key-concepts",
              "slug": "/key-concepts/processor",
              "permalink": "/docs/key-concepts/processor",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "The SubstrateProcessor is the main actor in transforming and loading on-chain data, according to pre-defined database model"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Architecture",
                "permalink": "/docs/key-concepts/architecture"
              },
              "next": {
                "title": "Substrate",
                "permalink": "/docs/key-concepts/substrate"
              }
            },
            {
              "unversionedId": "key-concepts/README",
              "id": "key-concepts/README",
              "title": "Key Concepts",
              "description": "This section includes explanations of important subjects for developing with Subsquid",
              "source": "@site/docs/key-concepts/README.md",
              "sourceDirName": "key-concepts",
              "slug": "/key-concepts/",
              "permalink": "/docs/key-concepts/",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "This section includes explanations of important subjects for developing with Subsquid"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Overview",
                "permalink": "/docs/"
              },
              "next": {
                "title": "Architecture",
                "permalink": "/docs/key-concepts/architecture"
              }
            },
            {
              "unversionedId": "key-concepts/substrate",
              "id": "key-concepts/substrate",
              "title": "Substrate",
              "description": "A brief description of the blockchain framework upon which Subsquid is based and its main concepts.",
              "source": "@site/docs/key-concepts/substrate.md",
              "sourceDirName": "key-concepts",
              "slug": "/key-concepts/substrate",
              "permalink": "/docs/key-concepts/substrate",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "A brief description of the blockchain framework upon which Subsquid is based and its main concepts."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Processor",
                "permalink": "/docs/key-concepts/processor"
              },
              "next": {
                "title": "Typegen",
                "permalink": "/docs/key-concepts/typegen"
              }
            },
            {
              "unversionedId": "key-concepts/typegen",
              "id": "key-concepts/typegen",
              "title": "Typegen",
              "description": "Squid Typegen is a code generation tool for creating Typescript types for substrate Events, Extrinsics, Storage Items (for Substrate) and EVM logs.",
              "source": "@site/docs/key-concepts/typegen.md",
              "sourceDirName": "key-concepts",
              "slug": "/key-concepts/typegen",
              "permalink": "/docs/key-concepts/typegen",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "Squid Typegen is a code generation tool for creating Typescript types for substrate Events, Extrinsics, Storage Items (for Substrate) and EVM logs."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Substrate",
                "permalink": "/docs/key-concepts/substrate"
              },
              "next": {
                "title": "Mappings",
                "permalink": "/docs/mappings/"
              }
            },
            {
              "unversionedId": "mappings/index",
              "id": "mappings/index",
              "title": "Mappings",
              "description": "",
              "source": "@site/docs/mappings/index.md",
              "sourceDirName": "mappings",
              "slug": "/mappings/",
              "permalink": "/docs/mappings/",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Typegen",
                "permalink": "/docs/key-concepts/typegen"
              },
              "next": {
                "title": "SubstrateEvent",
                "permalink": "/docs/mappings/substrateevent"
              }
            },
            {
              "unversionedId": "mappings/substrateevent",
              "id": "mappings/substrateevent",
              "title": "SubstrateEvent",
              "description": "Interface containing the required information about the emitted Substrate event",
              "source": "@site/docs/mappings/substrateevent.md",
              "sourceDirName": "mappings",
              "slug": "/mappings/substrateevent",
              "permalink": "/docs/mappings/substrateevent",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "Interface containing the required information about the emitted Substrate event"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Mappings",
                "permalink": "/docs/mappings/"
              },
              "next": {
                "title": "Quickstart",
                "permalink": "/docs/quickstart"
              }
            },
            {
              "unversionedId": "overview",
              "id": "overview",
              "title": "Overview",
              "description": "This documentation provides information for all degrees of expertise, varying from complete beginner, to those who only need a refresher on specific commands.",
              "source": "@site/docs/index.md",
              "sourceDirName": ".",
              "slug": "/",
              "permalink": "/docs/",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "overview",
                "title": "Overview"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Where do I get a type bundle for my chain?",
                "permalink": "/docs/faq/where-do-i-get-a-type-bundle-for-my-chain"
              },
              "next": {
                "title": "Key Concepts",
                "permalink": "/docs/key-concepts/"
              }
            },
            {
              "unversionedId": "quickstart",
              "id": "quickstart",
              "title": "Quickstart",
              "description": "Getting started",
              "source": "@site/docs/quickstart.mdx",
              "sourceDirName": ".",
              "slug": "/quickstart",
              "permalink": "/docs/quickstart",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "title": "Quickstart"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "SubstrateEvent",
                "permalink": "/docs/mappings/substrateevent"
              },
              "next": {
                "title": "Recipes",
                "permalink": "/docs/recipes/"
              }
            },
            {
              "unversionedId": "recipes/deploying-a-squid/maintaining-multiple-versions",
              "id": "recipes/deploying-a-squid/maintaining-multiple-versions",
              "title": "Maintaining multiple versions",
              "description": "At times, it may be useful to deploy multiple versions of the same Squid. For example, to test an advanced feature or to maintain retro-compatibility, following legacy-breaking changes.",
              "source": "@site/docs/recipes/deploying-a-squid/maintaining-multiple-versions.md",
              "sourceDirName": "recipes/deploying-a-squid",
              "slug": "/recipes/deploying-a-squid/maintaining-multiple-versions",
              "permalink": "/docs/recipes/deploying-a-squid/maintaining-multiple-versions",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Deploying a Squid",
                "permalink": "/docs/recipes/deploying-a-squid/"
              },
              "next": {
                "title": "Monitoring and sync status",
                "permalink": "/docs/recipes/deploying-a-squid/monitoring-and-sync-status"
              }
            },
            {
              "unversionedId": "recipes/deploying-a-squid/monitoring-and-sync-status",
              "id": "recipes/deploying-a-squid/monitoring-and-sync-status",
              "title": "Monitoring and sync status",
              "description": "The Subsquid SDK offers a useful command line tool to monitor the Cloud-deployed Squid. the tail subcommand will output the logs of a Squid, when providing its name and version.",
              "source": "@site/docs/recipes/deploying-a-squid/monitoring-and-sync-status.md",
              "sourceDirName": "recipes/deploying-a-squid",
              "slug": "/recipes/deploying-a-squid/monitoring-and-sync-status",
              "permalink": "/docs/recipes/deploying-a-squid/monitoring-and-sync-status",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Maintaining multiple versions",
                "permalink": "/docs/recipes/deploying-a-squid/maintaining-multiple-versions"
              },
              "next": {
                "title": "Obtaining a deployment key",
                "permalink": "/docs/recipes/deploying-a-squid/obtaining-a-deployment-key"
              }
            },
            {
              "unversionedId": "recipes/deploying-a-squid/obtaining-a-deployment-key",
              "id": "recipes/deploying-a-squid/obtaining-a-deployment-key",
              "title": "Obtaining a deployment key",
              "description": "This short guide shows how to obtain a deployment key for a Squid in our Software as a Service webpage.",
              "source": "@site/docs/recipes/deploying-a-squid/obtaining-a-deployment-key.md",
              "sourceDirName": "recipes/deploying-a-squid",
              "slug": "/recipes/deploying-a-squid/obtaining-a-deployment-key",
              "permalink": "/docs/recipes/deploying-a-squid/obtaining-a-deployment-key",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Monitoring and sync status",
                "permalink": "/docs/recipes/deploying-a-squid/monitoring-and-sync-status"
              },
              "next": {
                "title": "Releasing a Squid version",
                "permalink": "/docs/recipes/deploying-a-squid/releasing-a-squid-version"
              }
            },
            {
              "unversionedId": "recipes/deploying-a-squid/README",
              "id": "recipes/deploying-a-squid/README",
              "title": "Deploying a Squid",
              "description": "This section goes over some of the most common tasks to accomplish when it comes to deploying a Squid to our SaaS.",
              "source": "@site/docs/recipes/deploying-a-squid/README.md",
              "sourceDirName": "recipes/deploying-a-squid",
              "slug": "/recipes/deploying-a-squid/",
              "permalink": "/docs/recipes/deploying-a-squid/",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Recipes",
                "permalink": "/docs/recipes/"
              },
              "next": {
                "title": "Maintaining multiple versions",
                "permalink": "/docs/recipes/deploying-a-squid/maintaining-multiple-versions"
              }
            },
            {
              "unversionedId": "recipes/deploying-a-squid/releasing-a-squid-version",
              "id": "recipes/deploying-a-squid/releasing-a-squid-version",
              "title": "Releasing a Squid version",
              "description": "Deploy your code",
              "source": "@site/docs/recipes/deploying-a-squid/releasing-a-squid-version.md",
              "sourceDirName": "recipes/deploying-a-squid",
              "slug": "/recipes/deploying-a-squid/releasing-a-squid-version",
              "permalink": "/docs/recipes/deploying-a-squid/releasing-a-squid-version",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Obtaining a deployment key",
                "permalink": "/docs/recipes/deploying-a-squid/obtaining-a-deployment-key"
              },
              "next": {
                "title": "Updating a Squid",
                "permalink": "/docs/recipes/deploying-a-squid/updating-a-squid"
              }
            },
            {
              "unversionedId": "recipes/deploying-a-squid/updating-a-squid",
              "id": "recipes/deploying-a-squid/updating-a-squid",
              "title": "Updating a Squid",
              "description": "With and without resetting the database",
              "source": "@site/docs/recipes/deploying-a-squid/updating-a-squid.md",
              "sourceDirName": "recipes/deploying-a-squid",
              "slug": "/recipes/deploying-a-squid/updating-a-squid",
              "permalink": "/docs/recipes/deploying-a-squid/updating-a-squid",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "With and without resetting the database"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Releasing a Squid version",
                "permalink": "/docs/recipes/deploying-a-squid/releasing-a-squid-version"
              },
              "next": {
                "title": "Giant Squid API",
                "permalink": "/docs/recipes/giant-squid-api/"
              }
            },
            {
              "unversionedId": "recipes/giant-squid-api/client-example",
              "id": "recipes/giant-squid-api/client-example",
              "title": "Client example",
              "description": "As mentioned before, any client wanting to aggregate multi-chain data available via the Giant Squid API, needs to perform two tasks:",
              "source": "@site/docs/recipes/giant-squid-api/client-example.md",
              "sourceDirName": "recipes/giant-squid-api",
              "slug": "/recipes/giant-squid-api/client-example",
              "permalink": "/docs/recipes/giant-squid-api/client-example",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Giant Squid API",
                "permalink": "/docs/recipes/giant-squid-api/"
              },
              "next": {
                "title": "Queries",
                "permalink": "/docs/recipes/giant-squid-api/queries"
              }
            },
            {
              "unversionedId": "recipes/giant-squid-api/queries",
              "id": "recipes/giant-squid-api/queries",
              "title": "Queries",
              "description": "The Giant Squid API is available at this endpoint and here is a look at the GraphiQL playground interface.",
              "source": "@site/docs/recipes/giant-squid-api/queries.md",
              "sourceDirName": "recipes/giant-squid-api",
              "slug": "/recipes/giant-squid-api/queries",
              "permalink": "/docs/recipes/giant-squid-api/queries",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Client example",
                "permalink": "/docs/recipes/giant-squid-api/client-example"
              },
              "next": {
                "title": "How to launch an Archive",
                "permalink": "/docs/recipes/how-to-launch-a-squid-archive"
              }
            },
            {
              "unversionedId": "recipes/giant-squid-api/README",
              "id": "recipes/giant-squid-api/README",
              "title": "Giant Squid API",
              "description": "Introducing the Giant Squid API, a single endpoint containing data from multiple chains and parachains",
              "source": "@site/docs/recipes/giant-squid-api/README.md",
              "sourceDirName": "recipes/giant-squid-api",
              "slug": "/recipes/giant-squid-api/",
              "permalink": "/docs/recipes/giant-squid-api/",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "Introducing the Giant Squid API, a single endpoint containing data from multiple chains and parachains"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Updating a Squid",
                "permalink": "/docs/recipes/deploying-a-squid/updating-a-squid"
              },
              "next": {
                "title": "Client example",
                "permalink": "/docs/recipes/giant-squid-api/client-example"
              }
            },
            {
              "unversionedId": "recipes/how-to-launch-a-squid-archive",
              "id": "recipes/how-to-launch-a-squid-archive",
              "title": "How to launch an Archive",
              "description": "Quick how-to on running an Archive for a specific blockchain.",
              "source": "@site/docs/recipes/how-to-launch-a-squid-archive.md",
              "sourceDirName": "recipes",
              "slug": "/recipes/how-to-launch-a-squid-archive",
              "permalink": "/docs/recipes/how-to-launch-a-squid-archive",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "Quick how-to on running an Archive for a specific blockchain."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Queries",
                "permalink": "/docs/recipes/giant-squid-api/queries"
              },
              "next": {
                "title": "Migrate to v5",
                "permalink": "/docs/recipes/migrate-to-v5"
              }
            },
            {
              "unversionedId": "recipes/migrate-to-v5",
              "id": "recipes/migrate-to-v5",
              "title": "Migrate to v5",
              "description": "Version 5 of Squid introduced many changes, and a good part of them are not retro-compatible, so some actions are required to update and make sure the project still runs as it's supposed to.",
              "source": "@site/docs/recipes/migrate-to-v5.md",
              "sourceDirName": "recipes",
              "slug": "/recipes/migrate-to-v5",
              "permalink": "/docs/recipes/migrate-to-v5",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "Version 5 of Squid introduced many changes, and a good part of them are not retro-compatible, so some actions are required to update and make sure the project still runs as it's supposed to."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "How to launch an Archive",
                "permalink": "/docs/recipes/how-to-launch-a-squid-archive"
              },
              "next": {
                "title": "Running a Squid",
                "permalink": "/docs/recipes/running-a-squid/"
              }
            },
            {
              "unversionedId": "recipes/README",
              "id": "recipes/README",
              "title": "Recipes",
              "description": "",
              "source": "@site/docs/recipes/README.md",
              "sourceDirName": "recipes",
              "slug": "/recipes/",
              "permalink": "/docs/recipes/",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Quickstart",
                "permalink": "/docs/quickstart"
              },
              "next": {
                "title": "Deploying a Squid",
                "permalink": "/docs/recipes/deploying-a-squid/"
              }
            },
            {
              "unversionedId": "recipes/running-a-squid/building-with-docker",
              "id": "recipes/running-a-squid/building-with-docker",
              "title": "Building with Docker",
              "description": "The squid template repository comes with a Dockerfile included.",
              "source": "@site/docs/recipes/running-a-squid/building-with-docker.md",
              "sourceDirName": "recipes/running-a-squid",
              "slug": "/recipes/running-a-squid/building-with-docker",
              "permalink": "/docs/recipes/running-a-squid/building-with-docker",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Running a Squid",
                "permalink": "/docs/recipes/running-a-squid/"
              },
              "next": {
                "title": "Define a Squid Schema",
                "permalink": "/docs/recipes/running-a-squid/define-a-squid-schema"
              }
            },
            {
              "unversionedId": "recipes/running-a-squid/define-a-squid-schema",
              "id": "recipes/running-a-squid/define-a-squid-schema",
              "title": "Define a Squid Schema",
              "description": "The schema will help create database entities, as well as TypeScript classes wrapping them, and will be exposed to API clients by the GraphQL server.",
              "source": "@site/docs/recipes/running-a-squid/define-a-squid-schema.md",
              "sourceDirName": "recipes/running-a-squid",
              "slug": "/recipes/running-a-squid/define-a-squid-schema",
              "permalink": "/docs/recipes/running-a-squid/define-a-squid-schema",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "The schema will help create database entities, as well as TypeScript classes wrapping them, and will be exposed to API clients by the GraphQL server."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Building with Docker",
                "permalink": "/docs/recipes/running-a-squid/building-with-docker"
              },
              "next": {
                "title": "Generate type-safe interfaces",
                "permalink": "/docs/recipes/running-a-squid/generate-typescript-definitions"
              }
            },
            {
              "unversionedId": "recipes/running-a-squid/generate-typescript-definitions",
              "id": "recipes/running-a-squid/generate-typescript-definitions",
              "title": "Generate type-safe interfaces",
              "description": "Learn how to leverage Subsquid SDK automated tools to create TypeScript classes for Substrate Events, calls and Storage items.",
              "source": "@site/docs/recipes/running-a-squid/generate-typescript-definitions.md",
              "sourceDirName": "recipes/running-a-squid",
              "slug": "/recipes/running-a-squid/generate-typescript-definitions",
              "permalink": "/docs/recipes/running-a-squid/generate-typescript-definitions",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "Learn how to leverage Subsquid SDK automated tools to create TypeScript classes for Substrate Events, calls and Storage items."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Define a Squid Schema",
                "permalink": "/docs/recipes/running-a-squid/define-a-squid-schema"
              },
              "next": {
                "title": "Local runs",
                "permalink": "/docs/recipes/running-a-squid/local-runs"
              }
            },
            {
              "unversionedId": "recipes/running-a-squid/local-runs",
              "id": "recipes/running-a-squid/local-runs",
              "title": "Local runs",
              "description": "This guide considers that a Squid project has been created or that the Squid template repository has been cloned and maybe customized.",
              "source": "@site/docs/recipes/running-a-squid/local-runs.md",
              "sourceDirName": "recipes/running-a-squid",
              "slug": "/recipes/running-a-squid/local-runs",
              "permalink": "/docs/recipes/running-a-squid/local-runs",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Generate type-safe interfaces",
                "permalink": "/docs/recipes/running-a-squid/generate-typescript-definitions"
              },
              "next": {
                "title": "Multi-chain processors",
                "permalink": "/docs/recipes/running-a-squid/multi-chain-processors"
              }
            },
            {
              "unversionedId": "recipes/running-a-squid/multi-chain-processors",
              "id": "recipes/running-a-squid/multi-chain-processors",
              "title": "Multi-chain processors",
              "description": "Subsquid framework does not impose any limit's to the builder's creativity. Thanks to its modular structure and multi-layer architecture, it is possible to develop multiple processors, connected to multiple blockchain archives, as part of one single Squid API.",
              "source": "@site/docs/recipes/running-a-squid/multi-chain-processors.md",
              "sourceDirName": "recipes/running-a-squid",
              "slug": "/recipes/running-a-squid/multi-chain-processors",
              "permalink": "/docs/recipes/running-a-squid/multi-chain-processors",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Local runs",
                "permalink": "/docs/recipes/running-a-squid/local-runs"
              },
              "next": {
                "title": "Prometheus metrics",
                "permalink": "/docs/recipes/running-a-squid/prometheus-metrics"
              }
            },
            {
              "unversionedId": "recipes/running-a-squid/prometheus-metrics",
              "id": "recipes/running-a-squid/prometheus-metrics",
              "title": "Prometheus metrics",
              "description": "The Subsquid SDK comes with Prometheus metrics to monitor synchronization status. When launching the processor, it is sufficient to specify the port at which metrics should be served via the environment variable PROCESSORPROMETHEUSPORT.",
              "source": "@site/docs/recipes/running-a-squid/prometheus-metrics.md",
              "sourceDirName": "recipes/running-a-squid",
              "slug": "/recipes/running-a-squid/prometheus-metrics",
              "permalink": "/docs/recipes/running-a-squid/prometheus-metrics",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Multi-chain processors",
                "permalink": "/docs/recipes/running-a-squid/multi-chain-processors"
              },
              "next": {
                "title": "Schema updates",
                "permalink": "/docs/recipes/running-a-squid/schema-updates"
              }
            },
            {
              "unversionedId": "recipes/running-a-squid/README",
              "id": "recipes/running-a-squid/README",
              "title": "Running a Squid",
              "description": "",
              "source": "@site/docs/recipes/running-a-squid/README.md",
              "sourceDirName": "recipes/running-a-squid",
              "slug": "/recipes/running-a-squid/",
              "permalink": "/docs/recipes/running-a-squid/",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Migrate to v5",
                "permalink": "/docs/recipes/migrate-to-v5"
              },
              "next": {
                "title": "Building with Docker",
                "permalink": "/docs/recipes/running-a-squid/building-with-docker"
              }
            },
            {
              "unversionedId": "recipes/running-a-squid/schema-updates",
              "id": "recipes/running-a-squid/schema-updates",
              "title": "Schema updates",
              "description": "Over the course of development of an API it is often the case that new things are discovered, requests for changes happen, and so it may happen that a change to the previously defined schema is necessary.",
              "source": "@site/docs/recipes/running-a-squid/schema-updates.md",
              "sourceDirName": "recipes/running-a-squid",
              "slug": "/recipes/running-a-squid/schema-updates",
              "permalink": "/docs/recipes/running-a-squid/schema-updates",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Prometheus metrics",
                "permalink": "/docs/recipes/running-a-squid/prometheus-metrics"
              },
              "next": {
                "title": "Reference",
                "permalink": "/docs/reference/"
              }
            },
            {
              "unversionedId": "reference/api-extensions",
              "id": "reference/api-extensions",
              "title": "API Extensions",
              "description": "Squid alows to extend the GraphQL auto-generated schema with custom queries.",
              "source": "@site/docs/reference/api-extensions.md",
              "sourceDirName": "reference",
              "slug": "/reference/api-extensions",
              "permalink": "/docs/reference/api-extensions",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Reference",
                "permalink": "/docs/reference/"
              },
              "next": {
                "title": "EVM Processor",
                "permalink": "/docs/reference/evm-processor"
              }
            },
            {
              "unversionedId": "reference/evm-processor",
              "id": "reference/evm-processor",
              "title": "EVM Processor",
              "description": "Subsquid API framework was initially built with Substrate blockchains in mind. It is fully and natively compatible with all network built with such scheme.",
              "source": "@site/docs/reference/evm-processor.md",
              "sourceDirName": "reference",
              "slug": "/reference/evm-processor",
              "permalink": "/docs/reference/evm-processor",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "API Extensions",
                "permalink": "/docs/reference/api-extensions"
              },
              "next": {
                "title": "Handler functions",
                "permalink": "/docs/reference/handler-functions/"
              }
            },
            {
              "unversionedId": "reference/handler-functions/context-interfaces",
              "id": "reference/handler-functions/context-interfaces",
              "title": "Context Interfaces",
              "description": "As mentioned in the parent page, the Subsquid SDK defines three interfaces for the Context objects passed to each Handler function. Here is the detailed reference for each one.",
              "source": "@site/docs/reference/handler-functions/context-interfaces.md",
              "sourceDirName": "reference/handler-functions",
              "slug": "/reference/handler-functions/context-interfaces",
              "permalink": "/docs/reference/handler-functions/context-interfaces",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Handler functions",
                "permalink": "/docs/reference/handler-functions/"
              },
              "next": {
                "title": "Handler Interfaces",
                "permalink": "/docs/reference/handler-functions/handler-interfaces"
              }
            },
            {
              "unversionedId": "reference/handler-functions/handler-interfaces",
              "id": "reference/handler-functions/handler-interfaces",
              "title": "Handler Interfaces",
              "description": "We already discussed that there are three different types of Handlers. Subsquid SDK defines interface for these functions, so that the methods to attach them to a Processor can be type-safe. Here are their definitions.",
              "source": "@site/docs/reference/handler-functions/handler-interfaces.md",
              "sourceDirName": "reference/handler-functions",
              "slug": "/reference/handler-functions/handler-interfaces",
              "permalink": "/docs/reference/handler-functions/handler-interfaces",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Context Interfaces",
                "permalink": "/docs/reference/handler-functions/context-interfaces"
              },
              "next": {
                "title": "Handler Options Interfaces",
                "permalink": "/docs/reference/handler-functions/handler-options-interfaces"
              }
            },
            {
              "unversionedId": "reference/handler-functions/handler-options-interfaces",
              "id": "reference/handler-functions/handler-options-interfaces",
              "title": "Handler Options Interfaces",
              "description": "The previous pages discussed the different types of Handlers, their Interfaces, how they can be added to the Processor. When attaching a handler to the Processor, the Subsquid SDK also allows to provide options and it defines interface for them. Here are their definitions and how they can influence the Handler execution.",
              "source": "@site/docs/reference/handler-functions/handler-options-interfaces.md",
              "sourceDirName": "reference/handler-functions",
              "slug": "/reference/handler-functions/handler-options-interfaces",
              "permalink": "/docs/reference/handler-functions/handler-options-interfaces",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Handler Interfaces",
                "permalink": "/docs/reference/handler-functions/handler-interfaces"
              },
              "next": {
                "title": "Runtime upgrades",
                "permalink": "/docs/reference/handler-functions/runtime-upgrades"
              }
            },
            {
              "unversionedId": "reference/handler-functions/README",
              "id": "reference/handler-functions/README",
              "title": "Handler functions",
              "description": "Handlers are a foundational ingredient of the Processor component of a Squid API. Sometimes referred to as Hooks, Handlers are, in simpler terms, functions whose execution is triggered by the Processor before (pre-Block hook) or after (post-Block hook) processing a block, or, alternatively, when the Processor encounters a previously configured Substrate Event or Substrate Extrinsic.",
              "source": "@site/docs/reference/handler-functions/README.md",
              "sourceDirName": "reference/handler-functions",
              "slug": "/reference/handler-functions/",
              "permalink": "/docs/reference/handler-functions/",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "EVM Processor",
                "permalink": "/docs/reference/evm-processor"
              },
              "next": {
                "title": "Context Interfaces",
                "permalink": "/docs/reference/handler-functions/context-interfaces"
              }
            },
            {
              "unversionedId": "reference/handler-functions/runtime-upgrades",
              "id": "reference/handler-functions/runtime-upgrades",
              "title": "Runtime upgrades",
              "description": "(and how to deal with them)",
              "source": "@site/docs/reference/handler-functions/runtime-upgrades.md",
              "sourceDirName": "reference/handler-functions",
              "slug": "/reference/handler-functions/runtime-upgrades",
              "permalink": "/docs/reference/handler-functions/runtime-upgrades",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "(and how to deal with them)"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Handler Options Interfaces",
                "permalink": "/docs/reference/handler-functions/handler-options-interfaces"
              },
              "next": {
                "title": "OpenReader Queries",
                "permalink": "/docs/reference/openreader-queries/"
              }
            },
            {
              "unversionedId": "reference/index",
              "id": "reference/index",
              "title": "Reference",
              "description": "",
              "source": "@site/docs/reference/index.mdx",
              "sourceDirName": "reference",
              "slug": "/reference/",
              "permalink": "/docs/reference/",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "title": "Reference"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Schema updates",
                "permalink": "/docs/recipes/running-a-squid/schema-updates"
              },
              "next": {
                "title": "API Extensions",
                "permalink": "/docs/reference/api-extensions"
              }
            },
            {
              "unversionedId": "reference/openreader-queries/and-or-filters",
              "id": "reference/openreader-queries/and-or-filters",
              "title": "AND/OR filters",
              "description": "Overview",
              "source": "@site/docs/reference/openreader-queries/and-or-filters.md",
              "sourceDirName": "reference/openreader-queries",
              "slug": "/reference/openreader-queries/and-or-filters",
              "permalink": "/docs/reference/openreader-queries/and-or-filters",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "OpenReader Queries",
                "permalink": "/docs/reference/openreader-queries/"
              },
              "next": {
                "title": "Cross-relation field queries",
                "permalink": "/docs/reference/openreader-queries/cross-relation-field-queries"
              }
            },
            {
              "unversionedId": "reference/openreader-queries/cross-relation-field-queries",
              "id": "reference/openreader-queries/cross-relation-field-queries",
              "title": "Cross-relation field queries",
              "description": "Introduction",
              "source": "@site/docs/reference/openreader-queries/cross-relation-field-queries.md",
              "sourceDirName": "reference/openreader-queries",
              "slug": "/reference/openreader-queries/cross-relation-field-queries",
              "permalink": "/docs/reference/openreader-queries/cross-relation-field-queries",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "AND/OR filters",
                "permalink": "/docs/reference/openreader-queries/and-or-filters"
              },
              "next": {
                "title": "JSON queries",
                "permalink": "/docs/reference/openreader-queries/json-queries"
              }
            },
            {
              "unversionedId": "reference/openreader-queries/json-queries",
              "id": "reference/openreader-queries/json-queries",
              "title": "JSON queries",
              "description": "Powerful queries leveraging JSON objects as fields in a schema",
              "source": "@site/docs/reference/openreader-queries/json-queries.md",
              "sourceDirName": "reference/openreader-queries",
              "slug": "/reference/openreader-queries/json-queries",
              "permalink": "/docs/reference/openreader-queries/json-queries",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "Powerful queries leveraging JSON objects as fields in a schema"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Cross-relation field queries",
                "permalink": "/docs/reference/openreader-queries/cross-relation-field-queries"
              },
              "next": {
                "title": "Nested field queries",
                "permalink": "/docs/reference/openreader-queries/nested-field-queries"
              }
            },
            {
              "unversionedId": "reference/openreader-queries/nested-field-queries",
              "id": "reference/openreader-queries/nested-field-queries",
              "title": "Nested field queries",
              "description": "Overview",
              "source": "@site/docs/reference/openreader-queries/nested-field-queries.md",
              "sourceDirName": "reference/openreader-queries",
              "slug": "/reference/openreader-queries/nested-field-queries",
              "permalink": "/docs/reference/openreader-queries/nested-field-queries",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "JSON queries",
                "permalink": "/docs/reference/openreader-queries/json-queries"
              },
              "next": {
                "title": "Resolve Union types/interfaces",
                "permalink": "/docs/reference/openreader-queries/resolve-union-types-interfaces"
              }
            },
            {
              "unversionedId": "reference/openreader-queries/README",
              "id": "reference/openreader-queries/README",
              "title": "OpenReader Queries",
              "description": "Collections of Reference pages dedicated to GraphQL queries",
              "source": "@site/docs/reference/openreader-queries/README.md",
              "sourceDirName": "reference/openreader-queries",
              "slug": "/reference/openreader-queries/",
              "permalink": "/docs/reference/openreader-queries/",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "Collections of Reference pages dedicated to GraphQL queries"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Runtime upgrades",
                "permalink": "/docs/reference/handler-functions/runtime-upgrades"
              },
              "next": {
                "title": "AND/OR filters",
                "permalink": "/docs/reference/openreader-queries/and-or-filters"
              }
            },
            {
              "unversionedId": "reference/openreader-queries/resolve-union-types-interfaces",
              "id": "reference/openreader-queries/resolve-union-types-interfaces",
              "title": "Resolve Union types/interfaces",
              "description": "Use the __typename meta field to resolve types when querying unions or interfaces",
              "source": "@site/docs/reference/openreader-queries/resolve-union-types-interfaces.md",
              "sourceDirName": "reference/openreader-queries",
              "slug": "/reference/openreader-queries/resolve-union-types-interfaces",
              "permalink": "/docs/reference/openreader-queries/resolve-union-types-interfaces",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "Use the __typename meta field to resolve types when querying unions or interfaces"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Nested field queries",
                "permalink": "/docs/reference/openreader-queries/nested-field-queries"
              },
              "next": {
                "title": "String/Regex queries",
                "permalink": "/docs/reference/openreader-queries/string-regex-queries"
              }
            },
            {
              "unversionedId": "reference/openreader-queries/string-regex-queries",
              "id": "reference/openreader-queries/string-regex-queries",
              "title": "String/Regex queries",
              "description": "",
              "source": "@site/docs/reference/openreader-queries/string-regex-queries.md",
              "sourceDirName": "reference/openreader-queries",
              "slug": "/reference/openreader-queries/string-regex-queries",
              "permalink": "/docs/reference/openreader-queries/string-regex-queries",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Resolve Union types/interfaces",
                "permalink": "/docs/reference/openreader-queries/resolve-union-types-interfaces"
              },
              "next": {
                "title": "OpenReader Schema",
                "permalink": "/docs/reference/openreader-schema/"
              }
            },
            {
              "unversionedId": "reference/openreader-schema/annotations-directives",
              "id": "reference/openreader-schema/annotations-directives",
              "title": "Annotations (Directives)",
              "description": "Directives are a native feature of GraphQL, whose purpose is to affect execution of the query in any way the server desires when attached to fields. They are also commonly known as Annotations in other languages such as Java.",
              "source": "@site/docs/reference/openreader-schema/annotations-directives.md",
              "sourceDirName": "reference/openreader-schema",
              "slug": "/reference/openreader-schema/annotations-directives",
              "permalink": "/docs/reference/openreader-schema/annotations-directives",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "OpenReader Schema",
                "permalink": "/docs/reference/openreader-schema/"
              },
              "next": {
                "title": "BigInt fields",
                "permalink": "/docs/reference/openreader-schema/bigint-fields"
              }
            },
            {
              "unversionedId": "reference/openreader-schema/bigint-fields",
              "id": "reference/openreader-schema/bigint-fields",
              "title": "BigInt fields",
              "description": "GraphQL objects types have names and fields, but at the end of the day, these fields will either have to be other object types, or resolve to some concrete data. This concrete data is represented by Scalar types. GraphQL comes with its own default set of Scalar types, but different implementations can define their own.",
              "source": "@site/docs/reference/openreader-schema/bigint-fields.md",
              "sourceDirName": "reference/openreader-schema",
              "slug": "/reference/openreader-schema/bigint-fields",
              "permalink": "/docs/reference/openreader-schema/bigint-fields",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Annotations (Directives)",
                "permalink": "/docs/reference/openreader-schema/annotations-directives"
              },
              "next": {
                "title": "Bytes fields",
                "permalink": "/docs/reference/openreader-schema/bytes-fields"
              }
            },
            {
              "unversionedId": "reference/openreader-schema/bytes-fields",
              "id": "reference/openreader-schema/bytes-fields",
              "title": "Bytes fields",
              "description": "GraphQL objects types have names and fields, but at the end of the day, these fields will either have to be other object types, or resolve to some concrete data. This concrete data is represented by Scalar types. GraphQL comes with its own default set of Scalar types, but different implementations can define their own.",
              "source": "@site/docs/reference/openreader-schema/bytes-fields.md",
              "sourceDirName": "reference/openreader-schema",
              "slug": "/reference/openreader-schema/bytes-fields",
              "permalink": "/docs/reference/openreader-schema/bytes-fields",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "BigInt fields",
                "permalink": "/docs/reference/openreader-schema/bigint-fields"
              },
              "next": {
                "title": "DateTime fields",
                "permalink": "/docs/reference/openreader-schema/datetime-fields"
              }
            },
            {
              "unversionedId": "reference/openreader-schema/datetime-fields",
              "id": "reference/openreader-schema/datetime-fields",
              "title": "DateTime fields",
              "description": "GraphQL objects types have names and fields, but at the end of the day, these fields will either have to be other object types, or resolve to some concrete data. This concrete data is represented by Scalar types. GraphQL comes with its own default set of Scalar types, but different implementations can define their own.",
              "source": "@site/docs/reference/openreader-schema/datetime-fields.md",
              "sourceDirName": "reference/openreader-schema",
              "slug": "/reference/openreader-schema/datetime-fields",
              "permalink": "/docs/reference/openreader-schema/datetime-fields",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Bytes fields",
                "permalink": "/docs/reference/openreader-schema/bytes-fields"
              },
              "next": {
                "title": "Entity Relations",
                "permalink": "/docs/reference/openreader-schema/entity-relations"
              }
            },
            {
              "unversionedId": "reference/openreader-schema/entity-relations",
              "id": "reference/openreader-schema/entity-relations",
              "title": "Entity Relations",
              "description": "One-to-One/One-to-Many/Many-to-One/Many-to-Many entity relations",
              "source": "@site/docs/reference/openreader-schema/entity-relations.md",
              "sourceDirName": "reference/openreader-schema",
              "slug": "/reference/openreader-schema/entity-relations",
              "permalink": "/docs/reference/openreader-schema/entity-relations",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "One-to-One/One-to-Many/Many-to-One/Many-to-Many entity relations"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "DateTime fields",
                "permalink": "/docs/reference/openreader-schema/datetime-fields"
              },
              "next": {
                "title": "Full text search",
                "permalink": "/docs/reference/openreader-schema/full-text-search"
              }
            },
            {
              "unversionedId": "reference/openreader-schema/full-text-search",
              "id": "reference/openreader-schema/full-text-search",
              "title": "Full text search",
              "description": "How to define a schema that allows full text search across fields",
              "source": "@site/docs/reference/openreader-schema/full-text-search.md",
              "sourceDirName": "reference/openreader-schema",
              "slug": "/reference/openreader-schema/full-text-search",
              "permalink": "/docs/reference/openreader-schema/full-text-search",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "How to define a schema that allows full text search across fields"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Entity Relations",
                "permalink": "/docs/reference/openreader-schema/entity-relations"
              },
              "next": {
                "title": "Interfaces",
                "permalink": "/docs/reference/openreader-schema/interfaces"
              }
            },
            {
              "unversionedId": "reference/openreader-schema/interfaces",
              "id": "reference/openreader-schema/interfaces",
              "title": "Interfaces",
              "description": "{%",
              "source": "@site/docs/reference/openreader-schema/interfaces.md",
              "sourceDirName": "reference/openreader-schema",
              "slug": "/reference/openreader-schema/interfaces",
              "permalink": "/docs/reference/openreader-schema/interfaces",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Full text search",
                "permalink": "/docs/reference/openreader-schema/full-text-search"
              },
              "next": {
                "title": "JSON fields",
                "permalink": "/docs/reference/openreader-schema/json-fields"
              }
            },
            {
              "unversionedId": "reference/openreader-schema/json-fields",
              "id": "reference/openreader-schema/json-fields",
              "title": "JSON fields",
              "description": "Our OpenReader implementation allows the definition of complex objects as fields. The result is that queries can retrieve these fields as JSON objects. That's why we decided to call them JSON fields.",
              "source": "@site/docs/reference/openreader-schema/json-fields.md",
              "sourceDirName": "reference/openreader-schema",
              "slug": "/reference/openreader-schema/json-fields",
              "permalink": "/docs/reference/openreader-schema/json-fields",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Interfaces",
                "permalink": "/docs/reference/openreader-schema/interfaces"
              },
              "next": {
                "title": "Union types",
                "permalink": "/docs/reference/openreader-schema/union-types"
              }
            },
            {
              "unversionedId": "reference/openreader-schema/README",
              "id": "reference/openreader-schema/README",
              "title": "OpenReader Schema",
              "description": "",
              "source": "@site/docs/reference/openreader-schema/README.md",
              "sourceDirName": "reference/openreader-schema",
              "slug": "/reference/openreader-schema/",
              "permalink": "/docs/reference/openreader-schema/",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "String/Regex queries",
                "permalink": "/docs/reference/openreader-queries/string-regex-queries"
              },
              "next": {
                "title": "Annotations (Directives)",
                "permalink": "/docs/reference/openreader-schema/annotations-directives"
              }
            },
            {
              "unversionedId": "reference/openreader-schema/union-types",
              "id": "reference/openreader-schema/union-types",
              "title": "Union types",
              "description": "Union types may look similar to Interfaces and in some ways they are, but there is a very important difference between them and it is that Unions cannot specify common fields between types that are part of them.",
              "source": "@site/docs/reference/openreader-schema/union-types.md",
              "sourceDirName": "reference/openreader-schema",
              "slug": "/reference/openreader-schema/union-types",
              "permalink": "/docs/reference/openreader-schema/union-types",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "JSON fields",
                "permalink": "/docs/reference/openreader-schema/json-fields"
              },
              "next": {
                "title": "Squid CLI Reference",
                "permalink": "/docs/reference/squid-cli/"
              }
            },
            {
              "unversionedId": "reference/squid-cli/auth",
              "id": "reference/squid-cli/auth",
              "title": "auth",
              "description": "The auth command of the sqd command line interface is used to authorize the current terminal session to interact with the Squid SaaS hosted solution.",
              "source": "@site/docs/reference/squid-cli/auth.md",
              "sourceDirName": "reference/squid-cli",
              "slug": "/reference/squid-cli/auth",
              "permalink": "/docs/reference/squid-cli/auth",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Squid CLI Reference",
                "permalink": "/docs/reference/squid-cli/"
              },
              "next": {
                "title": "codegen",
                "permalink": "/docs/reference/squid-cli/codegen"
              }
            },
            {
              "unversionedId": "reference/squid-cli/codegen",
              "id": "reference/squid-cli/codegen",
              "title": "codegen",
              "description": "The codegen is used to generate TypeScript classes that model the entities defined in schema.graphql file.",
              "source": "@site/docs/reference/squid-cli/codegen.md",
              "sourceDirName": "reference/squid-cli",
              "slug": "/reference/squid-cli/codegen",
              "permalink": "/docs/reference/squid-cli/codegen",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "auth",
                "permalink": "/docs/reference/squid-cli/auth"
              },
              "next": {
                "title": "db",
                "permalink": "/docs/reference/squid-cli/db"
              }
            },
            {
              "unversionedId": "reference/squid-cli/db",
              "id": "reference/squid-cli/db",
              "title": "db",
              "description": "The db topic of the sqd command line interface is used to manage the database of your Squid project. This is often necessary after having modified the schema.graphql with new or different entities and having generated model classes via the codegen command.",
              "source": "@site/docs/reference/squid-cli/db.md",
              "sourceDirName": "reference/squid-cli",
              "slug": "/reference/squid-cli/db",
              "permalink": "/docs/reference/squid-cli/db",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "codegen",
                "permalink": "/docs/reference/squid-cli/codegen"
              },
              "next": {
                "title": "help",
                "permalink": "/docs/reference/squid-cli/help"
              }
            },
            {
              "unversionedId": "reference/squid-cli/help",
              "id": "reference/squid-cli/help",
              "title": "help",
              "description": "The help command will list all available commands and topics of the sqd command line interface and their usage.",
              "source": "@site/docs/reference/squid-cli/help.md",
              "sourceDirName": "reference/squid-cli",
              "slug": "/reference/squid-cli/help",
              "permalink": "/docs/reference/squid-cli/help",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "db",
                "permalink": "/docs/reference/squid-cli/db"
              },
              "next": {
                "title": "Installation",
                "permalink": "/docs/reference/squid-cli/installation"
              }
            },
            {
              "unversionedId": "reference/squid-cli/installation",
              "id": "reference/squid-cli/installation",
              "title": "Installation",
              "description": "Installation",
              "source": "@site/docs/reference/squid-cli/installation.md",
              "sourceDirName": "reference/squid-cli",
              "slug": "/reference/squid-cli/installation",
              "permalink": "/docs/reference/squid-cli/installation",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "help",
                "permalink": "/docs/reference/squid-cli/help"
              },
              "next": {
                "title": "squid",
                "permalink": "/docs/reference/squid-cli/squid"
              }
            },
            {
              "unversionedId": "reference/squid-cli/README",
              "id": "reference/squid-cli/README",
              "title": "Squid CLI Reference",
              "description": "Reference page of the Squid CLI tools",
              "source": "@site/docs/reference/squid-cli/README.md",
              "sourceDirName": "reference/squid-cli",
              "slug": "/reference/squid-cli/",
              "permalink": "/docs/reference/squid-cli/",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "Reference page of the Squid CLI tools"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Union types",
                "permalink": "/docs/reference/openreader-schema/union-types"
              },
              "next": {
                "title": "auth",
                "permalink": "/docs/reference/squid-cli/auth"
              }
            },
            {
              "unversionedId": "reference/squid-cli/squid",
              "id": "reference/squid-cli/squid",
              "title": "squid",
              "description": "[//]: # (# squid)",
              "source": "@site/docs/reference/squid-cli/squid.md",
              "sourceDirName": "reference/squid-cli",
              "slug": "/reference/squid-cli/squid",
              "permalink": "/docs/reference/squid-cli/squid",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Installation",
                "permalink": "/docs/reference/squid-cli/installation"
              },
              "next": {
                "title": "Squid EVM typegen",
                "permalink": "/docs/reference/squid-evm-typegen"
              }
            },
            {
              "unversionedId": "reference/squid-evm-typegen",
              "id": "reference/squid-evm-typegen",
              "title": "Squid EVM typegen",
              "description": "Reference page of the squid-evm-typegen command line tool",
              "source": "@site/docs/reference/squid-evm-typegen.md",
              "sourceDirName": "reference",
              "slug": "/reference/squid-evm-typegen",
              "permalink": "/docs/reference/squid-evm-typegen",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "Reference page of the squid-evm-typegen command line tool"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "squid",
                "permalink": "/docs/reference/squid-cli/squid"
              },
              "next": {
                "title": "Squid Substrate metadata explorer",
                "permalink": "/docs/reference/squid-substrate-metadata-explorer"
              }
            },
            {
              "unversionedId": "reference/squid-substrate-metadata-explorer",
              "id": "reference/squid-substrate-metadata-explorer",
              "title": "Squid Substrate metadata explorer",
              "description": "Reference page of the squid-substrate-metadata-explorer command line tool",
              "source": "@site/docs/reference/squid-substrate-metadata-explorer.md",
              "sourceDirName": "reference",
              "slug": "/reference/squid-substrate-metadata-explorer",
              "permalink": "/docs/reference/squid-substrate-metadata-explorer",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "Reference page of the squid-substrate-metadata-explorer command line tool"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Squid EVM typegen",
                "permalink": "/docs/reference/squid-evm-typegen"
              },
              "next": {
                "title": "squid-substrate-typegen",
                "permalink": "/docs/reference/squid-substrate-typegen"
              }
            },
            {
              "unversionedId": "reference/squid-substrate-typegen",
              "id": "reference/squid-substrate-typegen",
              "title": "squid-substrate-typegen",
              "description": "[//]: # (---)",
              "source": "@site/docs/reference/squid-substrate-typegen.md",
              "sourceDirName": "reference",
              "slug": "/reference/squid-substrate-typegen",
              "permalink": "/docs/reference/squid-substrate-typegen",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Squid Substrate metadata explorer",
                "permalink": "/docs/reference/squid-substrate-metadata-explorer"
              },
              "next": {
                "title": "Storage calls",
                "permalink": "/docs/reference/storage-calls"
              }
            },
            {
              "unversionedId": "reference/storage-calls",
              "id": "reference/storage-calls",
              "title": "Storage calls",
              "description": "It is sometimes impossible to extract the required data with only event and extrinsic data. StorageContext exposes direct queries of runtime storage items via RPC.",
              "source": "@site/docs/reference/storage-calls.md",
              "sourceDirName": "reference",
              "slug": "/reference/storage-calls",
              "permalink": "/docs/reference/storage-calls",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "squid-substrate-typegen",
                "permalink": "/docs/reference/squid-substrate-typegen"
              },
              "next": {
                "title": "Store interface",
                "permalink": "/docs/reference/store-interface"
              }
            },
            {
              "unversionedId": "reference/store-interface",
              "id": "reference/store-interface",
              "title": "Store interface",
              "description": "When working with Subsquid SDK and building on the SubstrateProcessor, the Store is a very important concept one. As briefly explained in the Key Concept page dedicated to the Processor, it serves as an interface for the data-persistence layer, often represented by a database.",
              "source": "@site/docs/reference/store-interface.md",
              "sourceDirName": "reference",
              "slug": "/reference/store-interface",
              "permalink": "/docs/reference/store-interface",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Storage calls",
                "permalink": "/docs/reference/storage-calls"
              },
              "next": {
                "title": "Substrate Processor",
                "permalink": "/docs/reference/substrate-processor"
              }
            },
            {
              "unversionedId": "reference/substrate-processor",
              "id": "reference/substrate-processor",
              "title": "Substrate Processor",
              "description": "The main explanation and overview for the Processor component of a Squid has been treated in the Key Concepts section. This page will go over the most important customizations a developer would want to make, when building their API.",
              "source": "@site/docs/reference/substrate-processor.md",
              "sourceDirName": "reference",
              "slug": "/reference/substrate-processor",
              "permalink": "/docs/reference/substrate-processor",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Store interface",
                "permalink": "/docs/reference/store-interface"
              },
              "next": {
                "title": "Tutorial",
                "permalink": "/docs/tutorial/"
              }
            },
            {
              "unversionedId": "tutorial/create-a-simple-squid",
              "id": "tutorial/create-a-simple-squid",
              "title": "Create a simple squid",
              "description": "This page is about taking the Squid template and customizing it to create a simple project",
              "source": "@site/docs/tutorial/create-a-simple-squid.md",
              "sourceDirName": "tutorial",
              "slug": "/tutorial/create-a-simple-squid",
              "permalink": "/docs/tutorial/create-a-simple-squid",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "create-a-simple-squid",
                "title": "Create a simple squid",
                "description": "This page is about taking the Squid template and customizing it to create a simple project"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Tutorial",
                "permalink": "/docs/tutorial/"
              },
              "next": {
                "title": "Create an EVM-processing Squid",
                "permalink": "/docs/tutorial/create-an-evm-processing-squid"
              }
            },
            {
              "unversionedId": "tutorial/create-an-evm-processing-squid",
              "id": "tutorial/create-an-evm-processing-squid",
              "title": "Create an EVM-processing Squid",
              "description": "Objective",
              "source": "@site/docs/tutorial/create-an-evm-processing-squid.md",
              "sourceDirName": "tutorial",
              "slug": "/tutorial/create-an-evm-processing-squid",
              "permalink": "/docs/tutorial/create-an-evm-processing-squid",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Create a simple squid",
                "permalink": "/docs/tutorial/create-a-simple-squid"
              },
              "next": {
                "title": "Deploy your first Squid",
                "permalink": "/docs/tutorial/deploy-your-squid"
              }
            },
            {
              "unversionedId": "tutorial/deploy-your-squid",
              "id": "tutorial/deploy-your-squid",
              "title": "Deploy your first Squid",
              "description": "Launch a Squid node hosted in the Cloud by Subsquid",
              "source": "@site/docs/tutorial/deploy-your-squid.md",
              "sourceDirName": "tutorial",
              "slug": "/tutorial/deploy-your-squid",
              "permalink": "/docs/tutorial/deploy-your-squid",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "Launch a Squid node hosted in the Cloud by Subsquid"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Create an EVM-processing Squid",
                "permalink": "/docs/tutorial/create-an-evm-processing-squid"
              },
              "next": {
                "title": "Development Environment set up",
                "permalink": "/docs/tutorial/development-environment-set-up"
              }
            },
            {
              "unversionedId": "tutorial/development-environment-set-up",
              "id": "tutorial/development-environment-set-up",
              "title": "Development Environment set up",
              "description": "Prepare your Development Environment to run, customize and build a Squid Template",
              "source": "@site/docs/tutorial/development-environment-set-up.md",
              "sourceDirName": "tutorial",
              "slug": "/tutorial/development-environment-set-up",
              "permalink": "/docs/tutorial/development-environment-set-up",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "Prepare your Development Environment to run, customize and build a Squid Template"
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Deploy your first Squid",
                "permalink": "/docs/tutorial/deploy-your-squid"
              },
              "next": {
                "title": "GraphQL",
                "permalink": "/docs/tutorial/graphql/"
              }
            },
            {
              "unversionedId": "tutorial/graphql/paginate-query-results",
              "id": "tutorial/graphql/paginate-query-results",
              "title": "Paginate query results",
              "description": "When query results are too big, one can chose to limit them or divide them in \"chunks\"",
              "source": "@site/docs/tutorial/graphql/paginate-query-results.md",
              "sourceDirName": "tutorial/graphql",
              "slug": "/tutorial/graphql/paginate-query-results",
              "permalink": "/docs/tutorial/graphql/paginate-query-results",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "When query results are too big, one can chose to limit them or divide them in \"chunks\""
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "GraphQL",
                "permalink": "/docs/tutorial/graphql/"
              },
              "next": {
                "title": "Queries",
                "permalink": "/docs/tutorial/graphql/queries"
              }
            },
            {
              "unversionedId": "tutorial/graphql/queries",
              "id": "tutorial/graphql/queries",
              "title": "Queries",
              "description": "Introduction",
              "source": "@site/docs/tutorial/graphql/queries.md",
              "sourceDirName": "tutorial/graphql",
              "slug": "/tutorial/graphql/queries",
              "permalink": "/docs/tutorial/graphql/queries",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Paginate query results",
                "permalink": "/docs/tutorial/graphql/paginate-query-results"
              },
              "next": {
                "title": "Sorting",
                "permalink": "/docs/tutorial/graphql/sorting"
              }
            },
            {
              "unversionedId": "tutorial/graphql/README",
              "id": "tutorial/graphql/README",
              "title": "GraphQL",
              "description": "Section dedicated to a small collection of tutorials about the main concepts of GraphQL APIs.",
              "source": "@site/docs/tutorial/graphql/README.md",
              "sourceDirName": "tutorial/graphql",
              "slug": "/tutorial/graphql/",
              "permalink": "/docs/tutorial/graphql/",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "Section dedicated to a small collection of tutorials about the main concepts of GraphQL APIs."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Development Environment set up",
                "permalink": "/docs/tutorial/development-environment-set-up"
              },
              "next": {
                "title": "Paginate query results",
                "permalink": "/docs/tutorial/graphql/paginate-query-results"
              }
            },
            {
              "unversionedId": "tutorial/graphql/sorting",
              "id": "tutorial/graphql/sorting",
              "title": "Sorting",
              "description": "The orderBy argument has been introduced in the previous section, but let's take a look at it in more detail.",
              "source": "@site/docs/tutorial/graphql/sorting.md",
              "sourceDirName": "tutorial/graphql",
              "slug": "/tutorial/graphql/sorting",
              "permalink": "/docs/tutorial/graphql/sorting",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "description": "The orderBy argument has been introduced in the previous section, but let's take a look at it in more detail."
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Queries",
                "permalink": "/docs/tutorial/graphql/queries"
              }
            },
            {
              "unversionedId": "tutorial/README",
              "id": "tutorial/README",
              "title": "Tutorial",
              "description": "",
              "source": "@site/docs/tutorial/README.md",
              "sourceDirName": "tutorial",
              "slug": "/tutorial/",
              "permalink": "/docs/tutorial/",
              "draft": false,
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Substrate Processor",
                "permalink": "/docs/reference/substrate-processor"
              },
              "next": {
                "title": "Create a simple squid",
                "permalink": "/docs/tutorial/create-a-simple-squid"
              }
            }
          ],
          "drafts": [],
          "sidebars": {
            "tutorialSidebar": [
              {
                "type": "category",
                "label": "Support",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "faq/bug-reporting-guidelines"
                  },
                  {
                    "type": "doc",
                    "id": "faq/how-do-i-decode-the-event-data-and-how-to-deal-with-runtime-upgrades"
                  },
                  {
                    "type": "doc",
                    "id": "faq/how-do-i-deploy-my-api-to-the-subsquid-hosted-service"
                  },
                  {
                    "type": "doc",
                    "id": "faq/how-do-i-know-which-events-and-extrinsics-i-need-for-the-handlers"
                  },
                  {
                    "type": "doc",
                    "id": "faq/how-do-i-run-and-test-the-graphql-api"
                  },
                  {
                    "type": "doc",
                    "id": "faq/how-do-i-start-the-processor"
                  },
                  {
                    "type": "doc",
                    "id": "faq/how-do-i-update-my-schema"
                  },
                  {
                    "type": "doc",
                    "id": "faq/how-do-i-write-the-schema"
                  },
                  {
                    "type": "doc",
                    "id": "faq/how-to-run-a-processor-against-a-different-chain"
                  },
                  {
                    "type": "doc",
                    "id": "faq/where-do-i-get-a-type-bundle-for-my-chain"
                  }
                ],
                "link": {
                  "type": "doc",
                  "id": "faq/README"
                }
              },
              {
                "type": "doc",
                "id": "overview"
              },
              {
                "type": "category",
                "label": "Key Concepts",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "key-concepts/architecture"
                  },
                  {
                    "type": "doc",
                    "id": "key-concepts/processor"
                  },
                  {
                    "type": "doc",
                    "id": "key-concepts/substrate"
                  },
                  {
                    "type": "doc",
                    "id": "key-concepts/typegen"
                  }
                ],
                "link": {
                  "type": "doc",
                  "id": "key-concepts/README"
                }
              },
              {
                "type": "category",
                "label": "Mappings",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "mappings/substrateevent"
                  }
                ],
                "link": {
                  "type": "doc",
                  "id": "mappings/index"
                }
              },
              {
                "type": "doc",
                "id": "quickstart"
              },
              {
                "type": "category",
                "label": "Recipes",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "category",
                    "label": "Deploying a Squid",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "recipes/deploying-a-squid/maintaining-multiple-versions"
                      },
                      {
                        "type": "doc",
                        "id": "recipes/deploying-a-squid/monitoring-and-sync-status"
                      },
                      {
                        "type": "doc",
                        "id": "recipes/deploying-a-squid/obtaining-a-deployment-key"
                      },
                      {
                        "type": "doc",
                        "id": "recipes/deploying-a-squid/releasing-a-squid-version"
                      },
                      {
                        "type": "doc",
                        "id": "recipes/deploying-a-squid/updating-a-squid"
                      }
                    ],
                    "link": {
                      "type": "doc",
                      "id": "recipes/deploying-a-squid/README"
                    }
                  },
                  {
                    "type": "category",
                    "label": "Giant Squid API",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "recipes/giant-squid-api/client-example"
                      },
                      {
                        "type": "doc",
                        "id": "recipes/giant-squid-api/queries"
                      }
                    ],
                    "link": {
                      "type": "doc",
                      "id": "recipes/giant-squid-api/README"
                    }
                  },
                  {
                    "type": "doc",
                    "id": "recipes/how-to-launch-a-squid-archive"
                  },
                  {
                    "type": "doc",
                    "id": "recipes/migrate-to-v5"
                  },
                  {
                    "type": "category",
                    "label": "Running a Squid",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "recipes/running-a-squid/building-with-docker"
                      },
                      {
                        "type": "doc",
                        "id": "recipes/running-a-squid/define-a-squid-schema"
                      },
                      {
                        "type": "doc",
                        "id": "recipes/running-a-squid/generate-typescript-definitions"
                      },
                      {
                        "type": "doc",
                        "id": "recipes/running-a-squid/local-runs"
                      },
                      {
                        "type": "doc",
                        "id": "recipes/running-a-squid/multi-chain-processors"
                      },
                      {
                        "type": "doc",
                        "id": "recipes/running-a-squid/prometheus-metrics"
                      },
                      {
                        "type": "doc",
                        "id": "recipes/running-a-squid/schema-updates"
                      }
                    ],
                    "link": {
                      "type": "doc",
                      "id": "recipes/running-a-squid/README"
                    }
                  }
                ],
                "link": {
                  "type": "doc",
                  "id": "recipes/README"
                }
              },
              {
                "type": "category",
                "label": "Reference",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "reference/api-extensions"
                  },
                  {
                    "type": "doc",
                    "id": "reference/evm-processor"
                  },
                  {
                    "type": "category",
                    "label": "Handler functions",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "reference/handler-functions/context-interfaces"
                      },
                      {
                        "type": "doc",
                        "id": "reference/handler-functions/handler-interfaces"
                      },
                      {
                        "type": "doc",
                        "id": "reference/handler-functions/handler-options-interfaces"
                      },
                      {
                        "type": "doc",
                        "id": "reference/handler-functions/runtime-upgrades"
                      }
                    ],
                    "link": {
                      "type": "doc",
                      "id": "reference/handler-functions/README"
                    }
                  },
                  {
                    "type": "category",
                    "label": "OpenReader Queries",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "reference/openreader-queries/and-or-filters"
                      },
                      {
                        "type": "doc",
                        "id": "reference/openreader-queries/cross-relation-field-queries"
                      },
                      {
                        "type": "doc",
                        "id": "reference/openreader-queries/json-queries"
                      },
                      {
                        "type": "doc",
                        "id": "reference/openreader-queries/nested-field-queries"
                      },
                      {
                        "type": "doc",
                        "id": "reference/openreader-queries/resolve-union-types-interfaces"
                      },
                      {
                        "type": "doc",
                        "id": "reference/openreader-queries/string-regex-queries"
                      }
                    ],
                    "link": {
                      "type": "doc",
                      "id": "reference/openreader-queries/README"
                    }
                  },
                  {
                    "type": "category",
                    "label": "OpenReader Schema",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "reference/openreader-schema/annotations-directives"
                      },
                      {
                        "type": "doc",
                        "id": "reference/openreader-schema/bigint-fields"
                      },
                      {
                        "type": "doc",
                        "id": "reference/openreader-schema/bytes-fields"
                      },
                      {
                        "type": "doc",
                        "id": "reference/openreader-schema/datetime-fields"
                      },
                      {
                        "type": "doc",
                        "id": "reference/openreader-schema/entity-relations"
                      },
                      {
                        "type": "doc",
                        "id": "reference/openreader-schema/full-text-search"
                      },
                      {
                        "type": "doc",
                        "id": "reference/openreader-schema/interfaces"
                      },
                      {
                        "type": "doc",
                        "id": "reference/openreader-schema/json-fields"
                      },
                      {
                        "type": "doc",
                        "id": "reference/openreader-schema/union-types"
                      }
                    ],
                    "link": {
                      "type": "doc",
                      "id": "reference/openreader-schema/README"
                    }
                  },
                  {
                    "type": "category",
                    "label": "Squid CLI Reference",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "reference/squid-cli/auth"
                      },
                      {
                        "type": "doc",
                        "id": "reference/squid-cli/codegen"
                      },
                      {
                        "type": "doc",
                        "id": "reference/squid-cli/db"
                      },
                      {
                        "type": "doc",
                        "id": "reference/squid-cli/help"
                      },
                      {
                        "type": "doc",
                        "id": "reference/squid-cli/installation"
                      },
                      {
                        "type": "doc",
                        "id": "reference/squid-cli/squid"
                      }
                    ],
                    "link": {
                      "type": "doc",
                      "id": "reference/squid-cli/README"
                    }
                  },
                  {
                    "type": "doc",
                    "id": "reference/squid-evm-typegen"
                  },
                  {
                    "type": "doc",
                    "id": "reference/squid-substrate-metadata-explorer"
                  },
                  {
                    "type": "doc",
                    "id": "reference/squid-substrate-typegen"
                  },
                  {
                    "type": "doc",
                    "id": "reference/storage-calls"
                  },
                  {
                    "type": "doc",
                    "id": "reference/store-interface"
                  },
                  {
                    "type": "doc",
                    "id": "reference/substrate-processor"
                  }
                ],
                "link": {
                  "type": "doc",
                  "id": "reference/index"
                }
              },
              {
                "type": "category",
                "label": "Tutorial",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "tutorial/create-a-simple-squid"
                  },
                  {
                    "type": "doc",
                    "id": "tutorial/create-an-evm-processing-squid"
                  },
                  {
                    "type": "doc",
                    "id": "tutorial/deploy-your-squid"
                  },
                  {
                    "type": "doc",
                    "id": "tutorial/development-environment-set-up"
                  },
                  {
                    "type": "category",
                    "label": "GraphQL",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "tutorial/graphql/paginate-query-results"
                      },
                      {
                        "type": "doc",
                        "id": "tutorial/graphql/queries"
                      },
                      {
                        "type": "doc",
                        "id": "tutorial/graphql/sorting"
                      }
                    ],
                    "link": {
                      "type": "doc",
                      "id": "tutorial/graphql/README"
                    }
                  }
                ],
                "link": {
                  "type": "doc",
                  "id": "tutorial/README"
                }
              }
            ]
          }
        },
        {
          "versionName": "v5",
          "label": "v5",
          "banner": "unmaintained",
          "badge": true,
          "className": "docs-version-v5",
          "path": "/docs/v5",
          "tagsPath": "/docs/v5/tags",
          "isLast": false,
          "sidebarFilePath": "/Users/n.borisov/subsquid-docs/versioned_sidebars/version-v5-sidebars.json",
          "contentPath": "/Users/n.borisov/subsquid-docs/versioned_docs/version-v5",
          "contentPathLocalized": "/Users/n.borisov/subsquid-docs/i18n/en/docusaurus-plugin-content-docs/version-v5",
          "docs": [
            {
              "unversionedId": "overview",
              "id": "version-v5/overview",
              "title": "Overview",
              "description": "This documentation provides information for all degrees of expertise, varying from complete beginner, to those who only need a refresher on specific commands.",
              "source": "@site/versioned_docs/version-v5/index.md",
              "sourceDirName": ".",
              "slug": "/",
              "permalink": "/docs/v5/",
              "draft": false,
              "tags": [],
              "version": "v5",
              "frontMatter": {
                "id": "overview",
                "title": "Overview"
              },
              "sidebar": "tutorialSidebar"
            }
          ],
          "drafts": [],
          "sidebars": {
            "tutorialSidebar": [
              {
                "type": "doc",
                "id": "version-v5/overview"
              }
            ]
          }
        }
      ]
    }
  },
  "docusaurus-plugin-content-blog": {
    "default": {
      "blogSidebarTitle": "Recent posts",
      "blogPosts": [
        {
          "id": "welcome",
          "metadata": {
            "permalink": "/blog/welcome",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-08-26-welcome/index.md",
            "source": "@site/blog/2021-08-26-welcome/index.md",
            "title": "Welcome",
            "description": "Docusaurus blogging features are powered by the blog plugin.",
            "date": "2021-08-26T00:00:00.000Z",
            "formattedDate": "August 26, 2021",
            "tags": [
              {
                "label": "facebook",
                "permalink": "/blog/tags/facebook"
              },
              {
                "label": "hello",
                "permalink": "/blog/tags/hello"
              },
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.405,
            "truncated": false,
            "authors": [
              {
                "name": "Sébastien Lorber",
                "title": "Docusaurus maintainer",
                "url": "https://sebastienlorber.com",
                "imageURL": "https://github.com/slorber.png",
                "key": "slorber"
              },
              {
                "name": "Yangshun Tay",
                "title": "Front End Engineer @ Facebook",
                "url": "https://github.com/yangshun",
                "imageURL": "https://github.com/yangshun.png",
                "key": "yangshun"
              }
            ],
            "frontMatter": {
              "slug": "welcome",
              "title": "Welcome",
              "authors": [
                "slorber",
                "yangshun"
              ],
              "tags": [
                "facebook",
                "hello",
                "docusaurus"
              ]
            },
            "nextItem": {
              "title": "MDX Blog Post",
              "permalink": "/blog/mdx-blog-post"
            }
          },
          "content": "[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\n\nSimply add Markdown files (or folders) to the `blog` directory.\n\nRegular blog authors can be added to `authors.yml`.\n\nThe blog post date can be extracted from filenames, such as:\n\n- `2019-05-30-welcome.md`\n- `2019-05-30-welcome/index.md`\n\nA blog post folder can be convenient to co-locate blog post images:\n\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\n\nThe blog supports tags as well!\n\n**And if you don't want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."
        },
        {
          "id": "mdx-blog-post",
          "metadata": {
            "permalink": "/blog/mdx-blog-post",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-08-01-mdx-blog-post.mdx",
            "source": "@site/blog/2021-08-01-mdx-blog-post.mdx",
            "title": "MDX Blog Post",
            "description": "Blog posts support Docusaurus Markdown features, such as MDX.",
            "date": "2021-08-01T00:00:00.000Z",
            "formattedDate": "August 1, 2021",
            "tags": [
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.175,
            "truncated": false,
            "authors": [
              {
                "name": "Sébastien Lorber",
                "title": "Docusaurus maintainer",
                "url": "https://sebastienlorber.com",
                "imageURL": "https://github.com/slorber.png",
                "key": "slorber"
              }
            ],
            "frontMatter": {
              "slug": "mdx-blog-post",
              "title": "MDX Blog Post",
              "authors": [
                "slorber"
              ],
              "tags": [
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "Welcome",
              "permalink": "/blog/welcome"
            },
            "nextItem": {
              "title": "Greetings!",
              "permalink": "/blog/greetings"
            }
          },
          "content": "Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\n\n:::tip\n\nUse the power of React to create interactive blog posts.\n\n```js\n<button onClick={() => alert('button clicked!')}>Click me!</button>\n```\n\n<button onClick={() => alert('button clicked!')}>Click me!</button>\n\n:::"
        },
        {
          "id": "greetings",
          "metadata": {
            "permalink": "/blog/greetings",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-02-28-greetings.md",
            "source": "@site/blog/2021-02-28-greetings.md",
            "title": "Greetings!",
            "description": "Congratulations, you have made your first post!",
            "date": "2021-02-28T00:00:00.000Z",
            "formattedDate": "February 28, 2021",
            "tags": [],
            "readingTime": 0.1,
            "truncated": false,
            "authors": [
              {
                "name": "Joel Marcey",
                "title": "Co-creator of Docusaurus 1",
                "url": "https://github.com/JoelMarcey",
                "image_url": "https://github.com/JoelMarcey.png",
                "imageURL": "https://github.com/JoelMarcey.png"
              },
              {
                "name": "Sébastien Lorber",
                "title": "Docusaurus maintainer",
                "url": "https://sebastienlorber.com",
                "image_url": "https://github.com/slorber.png",
                "tags": [
                  "greetings"
                ],
                "imageURL": "https://github.com/slorber.png"
              }
            ],
            "frontMatter": {
              "slug": "greetings",
              "title": "Greetings!",
              "authors": [
                {
                  "name": "Joel Marcey",
                  "title": "Co-creator of Docusaurus 1",
                  "url": "https://github.com/JoelMarcey",
                  "image_url": "https://github.com/JoelMarcey.png",
                  "imageURL": "https://github.com/JoelMarcey.png"
                },
                {
                  "name": "Sébastien Lorber",
                  "title": "Docusaurus maintainer",
                  "url": "https://sebastienlorber.com",
                  "image_url": "https://github.com/slorber.png",
                  "tags": [
                    "greetings"
                  ],
                  "imageURL": "https://github.com/slorber.png"
                }
              ]
            },
            "prevItem": {
              "title": "MDX Blog Post",
              "permalink": "/blog/mdx-blog-post"
            },
            "nextItem": {
              "title": "Long Blog Post",
              "permalink": "/blog/long-blog-post"
            }
          },
          "content": "Congratulations, you have made your first post!\n\nFeel free to play around and edit this post as much you like."
        },
        {
          "id": "long-blog-post",
          "metadata": {
            "permalink": "/blog/long-blog-post",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-05-29-long-blog-post.md",
            "source": "@site/blog/2019-05-29-long-blog-post.md",
            "title": "Long Blog Post",
            "description": "This is the summary of a very long blog post,",
            "date": "2019-05-29T00:00:00.000Z",
            "formattedDate": "May 29, 2019",
            "tags": [
              {
                "label": "hello",
                "permalink": "/blog/tags/hello"
              },
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 2.05,
            "truncated": true,
            "authors": [
              {
                "name": "Endilie Yacop Sucipto",
                "title": "Maintainer of Docusaurus",
                "url": "https://github.com/endiliey",
                "imageURL": "https://github.com/endiliey.png",
                "key": "endi"
              }
            ],
            "frontMatter": {
              "slug": "long-blog-post",
              "title": "Long Blog Post",
              "authors": "endi",
              "tags": [
                "hello",
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "Greetings!",
              "permalink": "/blog/greetings"
            },
            "nextItem": {
              "title": "First Blog Post",
              "permalink": "/blog/first-blog-post"
            }
          },
          "content": "This is the summary of a very long blog post,\n\nUse a `<!--` `truncate` `-->` comment to limit blog post size in the list view.\n\n<!--truncate-->\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"
        },
        {
          "id": "first-blog-post",
          "metadata": {
            "permalink": "/blog/first-blog-post",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-05-28-first-blog-post.md",
            "source": "@site/blog/2019-05-28-first-blog-post.md",
            "title": "First Blog Post",
            "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet",
            "date": "2019-05-28T00:00:00.000Z",
            "formattedDate": "May 28, 2019",
            "tags": [
              {
                "label": "hola",
                "permalink": "/blog/tags/hola"
              },
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.12,
            "truncated": false,
            "authors": [
              {
                "name": "Gao Wei",
                "title": "Docusaurus Core Team",
                "url": "https://github.com/wgao19",
                "image_url": "https://github.com/wgao19.png",
                "imageURL": "https://github.com/wgao19.png"
              }
            ],
            "frontMatter": {
              "slug": "first-blog-post",
              "title": "First Blog Post",
              "authors": {
                "name": "Gao Wei",
                "title": "Docusaurus Core Team",
                "url": "https://github.com/wgao19",
                "image_url": "https://github.com/wgao19.png",
                "imageURL": "https://github.com/wgao19.png"
              },
              "tags": [
                "hola",
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "Long Blog Post",
              "permalink": "/blog/long-blog-post"
            }
          },
          "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"
        }
      ],
      "blogListPaginated": [
        {
          "items": [
            "welcome",
            "mdx-blog-post",
            "greetings",
            "long-blog-post",
            "first-blog-post"
          ],
          "metadata": {
            "permalink": "/blog",
            "page": 1,
            "postsPerPage": 10,
            "totalPages": 1,
            "totalCount": 5,
            "blogDescription": "Blog",
            "blogTitle": "Blog"
          }
        }
      ],
      "blogTags": {
        "/blog/tags/facebook": {
          "label": "facebook",
          "items": [
            "welcome"
          ],
          "permalink": "/blog/tags/facebook",
          "pages": [
            {
              "items": [
                "welcome"
              ],
              "metadata": {
                "permalink": "/blog/tags/facebook",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/hello": {
          "label": "hello",
          "items": [
            "welcome",
            "long-blog-post"
          ],
          "permalink": "/blog/tags/hello",
          "pages": [
            {
              "items": [
                "welcome",
                "long-blog-post"
              ],
              "metadata": {
                "permalink": "/blog/tags/hello",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 2,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/docusaurus": {
          "label": "docusaurus",
          "items": [
            "welcome",
            "mdx-blog-post",
            "long-blog-post",
            "first-blog-post"
          ],
          "permalink": "/blog/tags/docusaurus",
          "pages": [
            {
              "items": [
                "welcome",
                "mdx-blog-post",
                "long-blog-post",
                "first-blog-post"
              ],
              "metadata": {
                "permalink": "/blog/tags/docusaurus",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 4,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/hola": {
          "label": "hola",
          "items": [
            "first-blog-post"
          ],
          "permalink": "/blog/tags/hola",
          "pages": [
            {
              "items": [
                "first-blog-post"
              ],
              "metadata": {
                "permalink": "/blog/tags/hola",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        }
      },
      "blogTagsListPath": "/blog/tags"
    }
  },
  "docusaurus-plugin-content-pages": {
    "default": [
      {
        "type": "jsx",
        "permalink": "/",
        "source": "@site/src/pages/index.tsx"
      },
      {
        "type": "mdx",
        "permalink": "/markdown-page",
        "source": "@site/src/pages/markdown-page.md",
        "title": "Markdown page example",
        "description": "You don't need React to write simple standalone pages.",
        "frontMatter": {
          "title": "Markdown page example"
        }
      }
    ]
  },
  "docusaurus-plugin-debug": {},
  "docusaurus-theme-classic": {},
  "docusaurus-tailwindcss": {},
  "docusaurus-bootstrap-plugin": {},
  "docusaurus-mdx-fallback-plugin": {}
}