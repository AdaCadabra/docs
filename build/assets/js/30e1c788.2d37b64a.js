"use strict";(self.webpackChunksubsquid_docs=self.webpackChunksubsquid_docs||[]).push([[191],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,h=u["".concat(p,".").concat(m)]||u[m]||d[m]||s;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var l=2;l<s;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},83121:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return d}});var a=n(87462),r=n(63366),s=(n(67294),n(3905)),o=["components"],i={description:"Version 5 of Squid introduced many changes, and a good part of them are not retro-compatible, so some actions are required to update and make sure the project still runs as it's supposed to."},p="Migrate to v5",l={unversionedId:"recipes/migrate-to-v5",id:"recipes/migrate-to-v5",title:"Migrate to v5",description:"Version 5 of Squid introduced many changes, and a good part of them are not retro-compatible, so some actions are required to update and make sure the project still runs as it's supposed to.",source:"@site/docs/recipes/migrate-to-v5.md",sourceDirName:"recipes",slug:"/recipes/migrate-to-v5",permalink:"/docs/recipes/migrate-to-v5",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/recipes/migrate-to-v5.md",tags:[],version:"current",frontMatter:{description:"Version 5 of Squid introduced many changes, and a good part of them are not retro-compatible, so some actions are required to update and make sure the project still runs as it's supposed to."},sidebar:"tutorialSidebar",previous:{title:"How to launch an Archive",permalink:"/docs/recipes/how-to-launch-a-squid-archive"},next:{title:"Running a Squid",permalink:"/docs/recipes/running-a-squid/"}},c={},d=[{value:"Package update",id:"package-update",level:2},{value:"Scripts update",id:"scripts-update",level:2},{value:"File structure updates",id:"file-structure-updates",level:2},{value:"Types update (optional but recommended)",id:"types-update-optional-but-recommended",level:2},{value:"Mappings",id:"mappings",level:2},{value:"Initialization",id:"initialization",level:4},{value:"Setting the number of blocks per request to be processed",id:"setting-the-number-of-blocks-per-request-to-be-processed",level:4},{value:"Setting Squid Archive and chain addresses:",id:"setting-squid-archive-and-chain-addresses",level:4},{value:"Add events and extrinsic handlers or pre/postBlock hooks, using:",id:"add-events-and-extrinsic-handlers-or-prepostblock-hooks-using",level:4}],u={toc:d};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,s.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"migrate-to-v5"},"Migrate to v5"),(0,s.kt)("h2",{id:"package-update"},"Package update"),(0,s.kt)("p",null,"The first thing to do is remove old packages named ",(0,s.kt)("inlineCode",{parentName:"p"},"hydra"),", since package names have changed and those are not used anymore, and install new ones."),(0,s.kt)("p",null,"Here is a list of commands to this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npm uninstall @subsquid/hydra-common\nnpm uninstall @subsquid/hydra-processor\nnpm uninstall @subsquid/openreader\nnpm uninstall @subsquid/hydra-cli\nnpm uninstall @subsquid/hydra-typegen\nnpm uninstall typeorm\n\nnpm install dotenv\nnpm install @subsquid/ss58@next\nnpm install @subsquid/graphql-server@next\nnpm install @subsquid/substrate-processor@next\nnpm install @subsquid/cli@next --save-dev\nnpm install @subsquid/substrate-metadata-explorer@next --save-dev\nnpm install @subsquid/substrate-typegen@next --save-dev\n")),(0,s.kt)("p",null,"Note: these can be wrapped in a shell file and executed."),(0,s.kt)("h2",{id:"scripts-update"},"Scripts update"),(0,s.kt)("p",null,"Because of package name changes, some scripts in ",(0,s.kt)("inlineCode",{parentName:"p"},"package.json")," have changed as well. These can simply be replaced with new ones ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/subsquid/squid-template/blob/main/package.json#L4"},"found here"),"."),(0,s.kt)("p",null,"Be aware that custom scripts might need changing as well."),(0,s.kt)("h2",{id:"file-structure-updates"},"File structure updates"),(0,s.kt)("p",null,"The overall file structure of the project has changed, although thankfully, this did not have any impacts on GraphQL schema and codegen parts."),(0,s.kt)("p",null,"The best thing to do in this case is to delete the ",(0,s.kt)("inlineCode",{parentName:"p"},"src/generated")," folder and recreate the models with codegen. Then create and apply a database migration."),(0,s.kt)("p",null,"Here is a list of commands to accomplish this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"rm -rf src/generated/\nnpx sqd codegen\nnpm run build\nnpx sqd db create-migration\nnpx sqd db migrate\n")),(0,s.kt)("p",null,"Also, ",(0,s.kt)("inlineCode",{parentName:"p"},"Dockerfile")," , ",(0,s.kt)("inlineCode",{parentName:"p"},"docker-compose.yml"),", ",(0,s.kt)("inlineCode",{parentName:"p"},".env"),", files should be replaced with the ones from ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/subsquid/squid-template"},"this repository"),"."),(0,s.kt)("h2",{id:"types-update-optional-but-recommended"},"Types update (optional but recommended)"),(0,s.kt)("p",null,"Just as with the previous version, it is possible to circumvent the ",(0,s.kt)("inlineCode",{parentName:"p"},"typegen")," feature and parse all received JSON documents manually."),(0,s.kt)("p",null,"However, the newest version brings massive upgrades to types. Now it can automatically create different types for the same event, depending on the spec version, preventing future crashes and bugs."),(0,s.kt)("p",null,"For this reason, it is recommended to replace the old types with new ones."),(0,s.kt)("p",null,"The process to generate types is explained in the ",(0,s.kt)("a",{parentName:"p",href:"/docs/recipes/running-a-squid/generate-typescript-definitions"},"dedicated tutorial")," and details about type bundles can be found in the ",(0,s.kt)("a",{parentName:"p",href:"/docs/faq/where-do-i-get-a-type-bundle-for-my-chain"},"Cheatsheet"),"."),(0,s.kt)("h2",{id:"mappings"},"Mappings"),(0,s.kt)("p",null,"One more thing to do is to update package paths and names in the codebase."),(0,s.kt)("p",null,"Furthermore, ",(0,s.kt)("inlineCode",{parentName:"p"},"manifest.yml")," is no longer used. The typegen section contained in it has been transferred to the ",(0,s.kt)("inlineCode",{parentName:"p"},"typegen.json")," file as mentioned in the previous section.\\\nThe other part, referring to mappings, now uses the logic of the processor class."),(0,s.kt)("p",null,"Instead of specifying the necessary parameters in ",(0,s.kt)("inlineCode",{parentName:"p"},"manifest.yml"),", you should define a processor object and set them there (for more information head to the ",(0,s.kt)("a",{parentName:"p",href:"/docs/key-concepts/processor"},"conceptual guide on the subject"),"). Here is ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/subsquid/squid-template/blob/main/src/processor.ts"},"an example"),", let's go through it:"),(0,s.kt)("h4",{id:"initialization"},"Initialization"),(0,s.kt)("p",null,"The parameter passed is a custom name"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"const processor = new SubstrateProcessor('kusama_balances')\n")),(0,s.kt)("h4",{id:"setting-the-number-of-blocks-per-request-to-be-processed"},"Setting the number of blocks per request to be processed"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"processor.setBatchSize(500)\n")),(0,s.kt)("h4",{id:"setting-squid-archive-and-chain-addresses"},"Setting Squid Archive and chain addresses:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"processor.setDataSource({\n    archive: 'https://kusama.indexer.gc.subsquid.io/v4/graphql', \n    chain: 'wss://kusama-rpc.polkadot.io'\n})\n")),(0,s.kt)("p",null,"Moreover, you can set demanded range of blocks with:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"processor.setBlockRange({from: , to: })\n")),(0,s.kt)("h4",{id:"add-events-and-extrinsic-handlers-or-prepostblock-hooks-using"},"Add events and extrinsic handlers or pre/postBlock hooks, using:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"processor.addEventHandler(eventName, fn)\nprocessor.addExtrinsicHandler(extrinsicName, fn)\n")),(0,s.kt)("p",null,"The function ",(0,s.kt)("inlineCode",{parentName:"p"},"fn")," can be one of the existing handlers. For example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"processor.addEventHandler('balances.Transfer', ctx => balancesTransfer(ctx));\n")),(0,s.kt)("p",null,"Where ",(0,s.kt)("inlineCode",{parentName:"p"},"balancesTransfer(ctx)")," is the previously existing handler, as defined:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"export async function balancesTransfer({ \n    store, \n    event, \n    block, \n    extrinsic, \n}: EventContext & StoreContext): Promise<void> {\n    // your code here\n}\n")),(0,s.kt)("p",null,"However, it\u2019s recommended to modify the event arguments handling inside the function according to new type processing. From the example linked above, it should go from this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"const [from, to, value] = new Balances.TransferEvent(event).params;\n")),(0,s.kt)("p",null,"To this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"function getTransferEvent(ctx: EventHandlerContext): TransferEvent { \n    let event = new BalancesTransferEvent(ctx)\n    if (event.isV1020) { \n        let [from, to, amount] = event.asV1020\n        return {from, to, amount}\n    } else if (event.isV1050) { \n        let [from, to, amount] = event.asV1050 \n        return {from, to, amount} \n    } else { \n        return event.asLatest \n    } \n}\n\n// other code here\n\nconst {from, to, amount} = getTransferEvent(ctx);\n")),(0,s.kt)("p",null,"Where ",(0,s.kt)("inlineCode",{parentName:"p"},"BalancesTransferEvent")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"TransferEvent")," are, respectively, a class and an interface generated by typegen."))}m.isMDXComponent=!0}}]);