"use strict";(self.webpackChunksubsquid_docs=self.webpackChunksubsquid_docs||[]).push([[2397],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(n),f=i,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||a;return n?r.createElement(m,o(o({ref:t},s),{},{components:n})):r.createElement(m,o({ref:t},s))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},57682:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var r=n(87462),i=n(63366),a=(n(67294),n(3905)),o=["components"],l={},c="Installation",u={unversionedId:"reference/squid-cli/installation",id:"reference/squid-cli/installation",title:"Installation",description:"Installation",source:"@site/docs/reference/squid-cli/installation.md",sourceDirName:"reference/squid-cli",slug:"/reference/squid-cli/installation",permalink:"/docs/reference/squid-cli/installation",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/squid-cli/installation.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"help",permalink:"/docs/reference/squid-cli/help"},next:{title:"squid",permalink:"/docs/reference/squid-cli/squid"}},s={},p=[{value:"Installation",id:"installation-1",level:2}],d={toc:p};function f(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"installation"},"Installation"),(0,a.kt)("h2",{id:"installation-1"},"Installation"),(0,a.kt)("p",null,"The Squid CLI is a tool that helps develop and manage your Squid project. It provides multiple utilities, from database management to SaaS control, to code generation."),(0,a.kt)("p",null,'{% hint style="info" %}\nNote: in the context of this guide, we assume the ',(0,a.kt)("a",{parentName:"p",href:"/docs/tutorial/development-environment-set-up"},"Development Environment has been already set up")," and that ",(0,a.kt)("inlineCode",{parentName:"p"},"npm")," is used, although other options are available.\n{% endhint %}"),(0,a.kt)("p",null,"To install Squid CLI, simply run this in a console."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm install -g @subsquid/cli\n")),(0,a.kt)("p",null,'{% hint style="info" %}\nBear in mind that ',(0,a.kt)("inlineCode",{parentName:"p"},"-g")," option will install it globally."),(0,a.kt)("p",null,"Alternatively, you can remove the option if you prefer not to, and run the cli with ",(0,a.kt)("inlineCode",{parentName:"p"},"npx"),"\n{% endhint %}"),(0,a.kt)("p",null,"Once installed, check available commands by running"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sqd --help\n")),(0,a.kt)("p",null,"Which will print out a help. You can obtain help for individual commands in the same way, by specifying it after ",(0,a.kt)("inlineCode",{parentName:"p"},"sqd")," and before the ",(0,a.kt)("inlineCode",{parentName:"p"},"--help")," option. For example, for the ",(0,a.kt)("inlineCode",{parentName:"p"},"db")," command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sqd db --help\n")))}f.isMDXComponent=!0}}]);