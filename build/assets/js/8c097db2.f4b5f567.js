"use strict";(self.webpackChunksubsquid_docs=self.webpackChunksubsquid_docs||[]).push([[8219],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return u}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),m=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=m(e.components);return n.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=m(a),u=r,b=s["".concat(d,".").concat(u)]||s[u]||c[u]||i;return a?n.createElement(b,l(l({ref:t},p),{},{components:a})):n.createElement(b,l({ref:t},p))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=s;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var m=2;m<i;m++)l[m]=a[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},43220:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return d},default:function(){return u},frontMatter:function(){return o},metadata:function(){return m},toc:function(){return c}});var n=a(87462),r=a(63366),i=(a(67294),a(3905)),l=["components"],o={},d="db",m={unversionedId:"reference/squid-cli/db",id:"reference/squid-cli/db",title:"db",description:"The db topic of the sqd command line interface is used to manage the database of your Squid project. This is often necessary after having modified the schema.graphql with new or different entities and having generated model classes via the codegen command.",source:"@site/docs/reference/squid-cli/db.md",sourceDirName:"reference/squid-cli",slug:"/reference/squid-cli/db",permalink:"/docs/reference/squid-cli/db",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/squid-cli/db.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"codegen",permalink:"/docs/reference/squid-cli/codegen"},next:{title:"help",permalink:"/docs/reference/squid-cli/help"}},p={},c=[{value:"Subcommands for <code>db</code> command",id:"subcommands-for-db-command",level:2},{value:"Examples",id:"examples",level:2},{value:"Create a new database (database name from ENV variable)",id:"create-a-new-database-database-name-from-env-variable",level:4},{value:"Drop existing database (database name from ENV variable)",id:"drop-existing-database-database-name-from-env-variable",level:4},{value:"Create new migration",id:"create-new-migration",level:4},{value:"Apply migration",id:"apply-migration",level:4},{value:"Create migration template",id:"create-migration-template",level:4}],s={toc:c};function u(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"db"},"db"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"db")," topic of the ",(0,i.kt)("inlineCode",{parentName:"p"},"sqd")," command line interface is used to manage the database of your Squid project. This is often necessary after having modified the ",(0,i.kt)("inlineCode",{parentName:"p"},"schema.graphql")," with new or different entities and having generated model classes via the ",(0,i.kt)("inlineCode",{parentName:"p"},"codegen")," command."),(0,i.kt)("p",null,"Thanks to this command, it is possible to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"create a new database"),(0,i.kt)("li",{parentName:"ul"},"drop an existing database"),(0,i.kt)("li",{parentName:"ul"},"create a new migration file, describing changes that need to be applied to the database"),(0,i.kt)("li",{parentName:"ul"},"apply a migration"),(0,i.kt)("li",{parentName:"ul"},"revert a migration")),(0,i.kt)("h2",{id:"subcommands-for-db-command"},"Subcommands for ",(0,i.kt)("inlineCode",{parentName:"h2"},"db")," command"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Subcommand"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Arguments"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"create")),(0,i.kt)("td",{parentName:"tr",align:null},"Create database"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"create-migration")),(0,i.kt)("td",{parentName:"tr",align:null},"Analyze database state and generate migration to match the target schema"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"[NAME]")," migration filename (optional)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"drop")),(0,i.kt)("td",{parentName:"tr",align:null},"Drop the database"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"migrate")),(0,i.kt)("td",{parentName:"tr",align:null},"Apply database migrations"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"new-migration")),(0,i.kt)("td",{parentName:"tr",align:null},"Create template file for a new migration"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"[NAME]")," migration filename (optional)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"revert")),(0,i.kt)("td",{parentName:"tr",align:null},"Revert the last performed migration"),(0,i.kt)("td",{parentName:"tr",align:null})))),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("h4",{id:"create-a-new-database-database-name-from-env-variable"},"Create a new database (database name from ENV variable)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sqd db create\n")),(0,i.kt)("h4",{id:"drop-existing-database-database-name-from-env-variable"},"Drop existing database (database name from ENV variable)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sqd db drop\n")),(0,i.kt)("h4",{id:"create-new-migration"},"Create new migration"),(0,i.kt)("p",null,"The tool will look at differences between the ",(0,i.kt)("inlineCode",{parentName:"p"},"schema.graphql")," file and the database schema, and it will create a file containing queries necessary to apply these changes to the database."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sqd db create-migration Initial\n")),(0,i.kt)("h4",{id:"apply-migration"},"Apply migration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sqd db migrate\n")),(0,i.kt)("h4",{id:"create-migration-template"},"Create migration template"),(0,i.kt)("p",null,"This command will create an empty migration file, to be manually filled to apply changes to the database."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sqd db new-migration Initial\n")),(0,i.kt)("p",null,"Some examples of how to use this command can be seen in the ",(0,i.kt)("a",{parentName:"p",href:"/docs/tutorial/create-a-simple-squid#apply-changes-to-the-database"},"Tutorial to create a simple Squid"),"."))}u.isMDXComponent=!0}}]);