"use strict";(self.webpackChunksubsquid_docs=self.webpackChunksubsquid_docs||[]).push([[9741],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return g}});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(r),g=i,m=d["".concat(s,".").concat(g)]||d[g]||p[g]||o;return r?n.createElement(m,a(a({ref:t},c),{},{components:r})):n.createElement(m,a({ref:t},c))}));function g(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4931:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var n=r(87462),i=r(63366),o=(r(67294),r(3905)),a=["components"],l={description:"The orderBy argument has been introduced in the previous section, but let's take a look at it in more detail."},s="Sorting",u={unversionedId:"tutorial/graphql/sorting",id:"tutorial/graphql/sorting",title:"Sorting",description:"The orderBy argument has been introduced in the previous section, but let's take a look at it in more detail.",source:"@site/docs/tutorial/graphql/sorting.md",sourceDirName:"tutorial/graphql",slug:"/tutorial/graphql/sorting",permalink:"/docs/tutorial/graphql/sorting",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial/graphql/sorting.md",tags:[],version:"current",frontMatter:{description:"The orderBy argument has been introduced in the previous section, but let's take a look at it in more detail."},sidebar:"tutorialSidebar",previous:{title:"Queries",permalink:"/docs/tutorial/graphql/queries"}},c={},p=[{value:"Sort order",id:"sort-order",level:2},{value:"<strong>Sorting entities</strong>",id:"sorting-entities",level:3},{value:"<strong>Sorting entities by multiple fields</strong>",id:"sorting-entities-by-multiple-fields",level:3}],d={toc:p};function g(e){var t=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"sorting"},"Sorting"),(0,o.kt)("h2",{id:"sort-order"},"Sort order"),(0,o.kt)("p",null,"The sort order (ascending vs. descending) is set by specifying the ",(0,o.kt)("inlineCode",{parentName:"p"},"ASC")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"DESC")," enum value for the column name in the ",(0,o.kt)("inlineCode",{parentName:"p"},"orderBy")," input object, e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"title_DESC"),"."),(0,o.kt)("h3",{id:"sorting-entities"},(0,o.kt)("strong",{parentName:"h3"},"Sorting entities")),(0,o.kt)("p",null,"Example: Fetch a list of videos sorted by their titles in an ascending order:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"query {\n  videos(orderBy: [title_ASC]) {\n    id\n    title\n  }\n}\n")),(0,o.kt)("h3",{id:"sorting-entities-by-multiple-fields"},(0,o.kt)("strong",{parentName:"h3"},"Sorting entities by multiple fields")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"orderBy")," argument takes an array of fields to allow sorting by multiple columns."),(0,o.kt)("p",null,"Example: Fetch a list of videos that is sorted by their titles (ascending) and then on their published date (descending):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"query {\n  videos(orderBy: [title_ASC, publishedOn_DESC]) {\n    id\n    title\n    publishedOn\n  }\n}\n")))}g.isMDXComponent=!0}}]);