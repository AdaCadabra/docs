"use strict";(self.webpackChunksubsquid_docs=self.webpackChunksubsquid_docs||[]).push([[7255],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),u=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return i.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,g=d["".concat(l,".").concat(m)]||d[m]||p[m]||r;return n?i.createElement(g,o(o({ref:t},c),{},{components:n})):i.createElement(g,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<r;u++)o[u]=n[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},70270:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var i=n(87462),a=n(63366),r=(n(67294),n(3905)),o=["components"],s={},l="Maintaining multiple versions",u={unversionedId:"recipes/deploying-a-squid/maintaining-multiple-versions",id:"recipes/deploying-a-squid/maintaining-multiple-versions",title:"Maintaining multiple versions",description:"At times, it may be useful to deploy multiple versions of the same Squid. For example, to test an advanced feature or to maintain retro-compatibility, following legacy-breaking changes.",source:"@site/docs/recipes/deploying-a-squid/maintaining-multiple-versions.md",sourceDirName:"recipes/deploying-a-squid",slug:"/recipes/deploying-a-squid/maintaining-multiple-versions",permalink:"/docs/recipes/deploying-a-squid/maintaining-multiple-versions",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/recipes/deploying-a-squid/maintaining-multiple-versions.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Deploying a Squid",permalink:"/docs/recipes/deploying-a-squid/"},next:{title:"Monitoring and sync status",permalink:"/docs/recipes/deploying-a-squid/monitoring-and-sync-status"}},c={},p=[{value:"Authentication",id:"authentication",level:2},{value:"Deploy a new version",id:"deploy-a-new-version",level:2},{value:"Listing version on the command line",id:"listing-version-on-the-command-line",level:2}],d={toc:p};function m(e){var t=e.components,s=(0,a.Z)(e,o);return(0,r.kt)("wrapper",(0,i.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"maintaining-multiple-versions"},"Maintaining multiple versions"),(0,r.kt)("p",null,"At times, it may be useful to deploy multiple versions of the same Squid. For example, to test an advanced feature or to maintain retro-compatibility, following legacy-breaking changes."),(0,r.kt)("h2",{id:"authentication"},"Authentication"),(0,r.kt)("p",null,"In order to accomplish the tasks below, the terminal window in which the commands are being launched, needs to be authenticated. To do so, refer to the Recipe on ",(0,r.kt)("a",{parentName:"p",href:"/docs/recipes/deploying-a-squid/obtaining-a-deployment-key"},"how to obtain a deployment key"),", and launch the authentication command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sqd auth --key sqd_<auht_code>\n")),(0,r.kt)("h2",{id:"deploy-a-new-version"},"Deploy a new version"),(0,r.kt)("p",null,"Deploying a new version is as easy as using the same command as releasing the first version, only difference is that, by changing the ",(0,r.kt)("inlineCode",{parentName:"p"},"squid_version"),", a new version will be created. If we take the example used in previous pages, the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sqd squid:release SquidSaas@2 --source <github url>#<github branch>\n")),(0,r.kt)("p",null,"Will result in a new line being added to Squid web page:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Multiple versions of the same Squid",src:n(66451).Z,width:"1738",height:"541"})),(0,r.kt)("h2",{id:"listing-version-on-the-command-line"},"Listing version on the command line"),(0,r.kt)("p",null,"To keep track of which Squids are available and which versions of a Squid are deployed, without consulting the webpage every time, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"ls")," command. This will list all Squids deployed for the account linked to the deployment key used to authenticate:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u21d2 sqd squid ls\n Name      Description \n \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \n SquidSaas null   \n")),(0,r.kt)("p",null,"And when using it with the ",(0,r.kt)("inlineCode",{parentName:"p"},"-n")," parameter to specify the Squid name, it can be used to list all its versions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u21d2 sqd squid ls -n SquidSaass\n version name artifactUrl                                           deploymentUrl                                       Status  Created at \n \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \n 1            https://github.com/<account>/squid-template.git#main https://app.gc.subsquid.io/beta/squidsaas/1/graphql SYNCING 1645701248 \n 2            https://github.com/<account>/squid-template.git#main https://app.gc.subsquid.io/beta/squidsaas/2/graphql SYNCING 1645710152 \n")))}m.isMDXComponent=!0},66451:function(e,t,n){t.Z=n.p+"assets/images/SquidSaas_v2-8eb48e62479db4628967a9821c9ad7b8.png"}}]);