"use strict";(self.webpackChunksubsquid_docs=self.webpackChunksubsquid_docs||[]).push([[3371],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),f=a,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||i;return n?r.createElement(m,o(o({ref:t},c),{},{components:n})):r.createElement(m,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},64820:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),o=["components"],s={description:"Learn how to leverage Subsquid SDK automated tools to create TypeScript classes for Substrate Events, calls and Storage items."},l="Generate type-safe interfaces",p={unversionedId:"recipes/running-a-squid/generate-typescript-definitions",id:"recipes/running-a-squid/generate-typescript-definitions",title:"Generate type-safe interfaces",description:"Learn how to leverage Subsquid SDK automated tools to create TypeScript classes for Substrate Events, calls and Storage items.",source:"@site/docs/recipes/running-a-squid/generate-typescript-definitions.md",sourceDirName:"recipes/running-a-squid",slug:"/recipes/running-a-squid/generate-typescript-definitions",permalink:"/docs/recipes/running-a-squid/generate-typescript-definitions",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/recipes/running-a-squid/generate-typescript-definitions.md",tags:[],version:"current",frontMatter:{description:"Learn how to leverage Subsquid SDK automated tools to create TypeScript classes for Substrate Events, calls and Storage items."},sidebar:"tutorialSidebar",previous:{title:"Define a Squid Schema",permalink:"/docs/recipes/running-a-squid/define-a-squid-schema"},next:{title:"Local runs",permalink:"/docs/recipes/running-a-squid/local-runs"}},c={},u=[{value:"Chain exploration",id:"chain-exploration",level:2},{value:"Types generation",id:"types-generation",level:2}],d={toc:u};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"generate-type-safe-interfaces"},"Generate type-safe interfaces"),(0,i.kt)("p",null,"The intent of this page is to showcase the necessary commands, parameters, and configuration. Head over to the page explaining ",(0,i.kt)("a",{parentName:"p",href:"/docs/key-concepts/typegen"},"Typegen")," for more clarity on the concepts behind it."),(0,i.kt)("p",null,"The generation of type-safe wrappers for events and calls is currently a two-step process."),(0,i.kt)("h2",{id:"chain-exploration"},"Chain exploration"),(0,i.kt)("p",null,"First, you need to explore the chain to find blocks that introduce a new spec version and fetch corresponding metadata. The ",(0,i.kt)("inlineCode",{parentName:"p"},"squid-substrate-metadata-explorer")," does exactly that. Here's an example to explore Kusama blockchain:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx squid-substrate-metadata-explorer \\\n  --chain wss://kusama-rpc.polkadot.io \\\n  --archive https://kusama.indexer.gc.subsquid.io/v4/graphql \\\n  --out kusamaVersions.json\n")),(0,i.kt)("p",null,"In the above command, the ",(0,i.kt)("inlineCode",{parentName:"p"},"--archive")," parameter is optional, but it speeds up the process significantly. The exploration of the Kusama network from scratch, without an archive, takes 20-30 minutes."),(0,i.kt)("p",null,"You can pass the result of any previous exploration to the ",(0,i.kt)("inlineCode",{parentName:"p"},"--out")," parameter. In that case, exploration will start from the last known block and thus will take much less time."),(0,i.kt)("h2",{id:"types-generation"},"Types generation"),(0,i.kt)("p",null,"After chain exploration is complete you can use ",(0,i.kt)("inlineCode",{parentName:"p"},"squid-substrate-typegen")," to generate required wrappers."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx squid-substrate-typegen typegen.json\n")),(0,i.kt)("p",null,"Where ",(0,i.kt)("inlineCode",{parentName:"p"},"typegen.json")," config file has the following structure:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "outDir": "src/types",\n  "chainVersions": "kusamaVersions.json", // the result of chain exploration\n  "typesBundle": "kusama", // see types bundle section below\n  "events": [ // list of events to generate\n    "balances.Transfer"\n  ],\n  "calls": [ // list of calls to generate\n    "timestamp.set"\n  ],\n  "storage": [\n    "System.Account" // <-- Qualified storage item name: "${Prefix}.${item}"\n  ]\n}\n')),(0,i.kt)("p",null,"A type-safe definition for each and every version of the event will be generated. Most of the time, one should be able to infer a normalized interface together with some glue code to make it fit the runtime-specific versions."),(0,i.kt)("p",null,'{% hint style="info" %}\n',(0,i.kt)("strong",{parentName:"p"},"Note"),": the Storage prefix is not transformed to ",(0,i.kt)("inlineCode",{parentName:"p"},"camelCase"),', but kept "as is".\n{% endhint %}'),(0,i.kt)("p",null,'{% hint style="info" %}\n',(0,i.kt)("strong",{parentName:"p"},"Note"),": the Storage prefix is equal to the pallet name in most cases, but it this should not be followed as a rule. You always need to verify the Storage prefix.\n{% endhint %}"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"typesBundle")," key in the ",(0,i.kt)("inlineCode",{parentName:"p"},"typegen.json")," configuration file can either be:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a chain name, all lower-case (e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"kusama"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"polkadot"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"statemint"),", a full list can be found ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/subsquid/squid/tree/master/substrate-metadata/src/old/definitions"},"here"),")"),(0,i.kt)("li",{parentName:"ul"},"a path to a JSON file with the structure specified ",(0,i.kt)("a",{parentName:"li",href:"/docs/faq/where-do-i-get-a-type-bundle-for-my-chain"},"here"))))}f.isMDXComponent=!0}}]);